//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	/// <summary>
	/// Action card entity to show action cards.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("actioncard")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class ActionCard : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActionCardId = "actioncardid";
			public const string Id = "actioncardid";
			public const string CardType = "cardtype";
			public const string CardTypeId = "cardtypeid";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Data = "data";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiryDate = "expirydate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentRegardingObjectId = "parentregardingobjectid";
			public const string Priority = "priority";
			public const string RecordId = "recordid";
			public const string RecordIdObjectTypeCode2 = "recordidobjecttypecode2";
			public const string ReferenceTokens = "referencetokens";
			public const string RegardingObjectId = "regardingobjectid";
			public const string Source = "source";
			public const string StartDate = "startdate";
			public const string State = "state";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string VersionNumber = "versionnumber";
			public const string Visibility = "visibility";
			public const string account_actioncard = "account_actioncard";
			public const string appointment_actioncard = "appointment_actioncard";
			public const string business_unit_actioncards = "business_unit_actioncards";
			public const string cardtype_actioncard = "cardtype_actioncard";
			public const string contact_actioncard = "contact_actioncard";
			public const string email_actioncard = "email_actioncard";
			public const string fax_actioncard = "fax_actioncard";
			public const string incident_actioncard = "incident_actioncard";
			public const string Lead_actioncard = "Lead_actioncard";
			public const string letter_actioncard = "letter_actioncard";
			public const string lk_actioncardbase_createdby = "lk_actioncardbase_createdby";
			public const string lk_actioncardbase_createdonbehalfby = "lk_actioncardbase_createdonbehalfby";
			public const string lk_actioncardbase_modifiedby = "lk_actioncardbase_modifiedby";
			public const string lk_actioncardbase_modifiedonbehalfby = "lk_actioncardbase_modifiedonbehalfby";
			public const string opportunity_actioncard = "opportunity_actioncard";
			public const string phonecall_actioncard = "phonecall_actioncard";
			public const string recurringappointmentmaster_actioncard = "recurringappointmentmaster_actioncard";
			public const string serviceappointment_actioncard = "serviceappointment_actioncard";
			public const string task_actioncard = "task_actioncard";
			public const string transactioncurrency_actioncard = "transactioncurrency_actioncard";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ActionCard() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "actioncard";
		
		public const string PrimaryIdAttribute = "actioncardid";
		
		public const string PrimaryNameAttribute = "title";
		
		public const int EntityTypeCode = 9962;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardid")]
		public System.Nullable<System.Guid> ActionCardId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("actioncardid");
			}
			set
			{
				this.OnPropertyChanging("ActionCardId");
				this.SetAttributeValue("actioncardid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActionCardId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActionCardId = value;
			}
		}
		
		/// <summary>
		/// The CardType ENUM value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtype")]
		public System.Nullable<int> CardType
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cardtype");
			}
			set
			{
				this.OnPropertyChanging("CardType");
				this.SetAttributeValue("cardtype", value);
				this.OnPropertyChanged("CardType");
			}
		}
		
		/// <summary>
		/// Unique identifier of the card type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		public Microsoft.Xrm.Sdk.EntityReference CardTypeId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cardtypeid");
			}
			set
			{
				this.OnPropertyChanging("CardTypeId");
				this.SetAttributeValue("cardtypeid", value);
				this.OnPropertyChanged("CardTypeId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when action card was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Json formatted string for generic purpose.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("data")]
		public string Data
		{
			get
			{
				return this.GetAttributeValue<string>("data");
			}
			set
			{
				this.OnPropertyChanging("Data");
				this.SetAttributeValue("data", value);
				this.OnPropertyChanged("Data");
			}
		}
		
		/// <summary>
		/// Card Description
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the action card with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Shows the Expiry Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expirydate")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("expirydate");
			}
			set
			{
				this.OnPropertyChanging("ExpiryDate");
				this.SetAttributeValue("expirydate", value);
				this.OnPropertyChanged("ExpiryDate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when action card was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// ParentRegardingObjectId of the ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentregardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentRegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentregardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("ParentRegardingObjectId");
				this.SetAttributeValue("parentregardingobjectid", value);
				this.OnPropertyChanged("ParentRegardingObjectId");
			}
		}
		
		/// <summary>
		/// Priority of the ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("priority")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("priority");
			}
			set
			{
				this.OnPropertyChanging("Priority");
				this.SetAttributeValue("priority", value);
				this.OnPropertyChanged("Priority");
			}
		}
		
		/// <summary>
		/// Shows the record ID.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordid")]
		public Microsoft.Xrm.Sdk.EntityReference RecordId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("recordid");
			}
			set
			{
				this.OnPropertyChanging("RecordId");
				this.SetAttributeValue("recordid", value);
				this.OnPropertyChanged("RecordId");
			}
		}
		
		/// <summary>
		/// RecordIdObjectTypeCode2 of the ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordidobjecttypecode2")]
		public System.Nullable<int> RecordIdObjectTypeCode2
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("recordidobjecttypecode2");
			}
			set
			{
				this.OnPropertyChanging("RecordIdObjectTypeCode2");
				this.SetAttributeValue("recordidobjecttypecode2", value);
				this.OnPropertyChanged("RecordIdObjectTypeCode2");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("referencetokens")]
		public string ReferenceTokens
		{
			get
			{
				return this.GetAttributeValue<string>("referencetokens");
			}
			set
			{
				this.OnPropertyChanging("ReferenceTokens");
				this.SetAttributeValue("referencetokens", value);
				this.OnPropertyChanged("ReferenceTokens");
			}
		}
		
		/// <summary>
		/// Choose the record that the card relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Source for the Action Card
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public Microsoft.Xrm.Sdk.OptionSetValue Source
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("source");
			}
			set
			{
				this.OnPropertyChanging("Source");
				this.SetAttributeValue("source", value);
				this.OnPropertyChanged("Source");
			}
		}
		
		/// <summary>
		/// Shows the Start Date
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startdate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startdate");
			}
			set
			{
				this.OnPropertyChanging("StartDate");
				this.SetAttributeValue("startdate", value);
				this.OnPropertyChanged("StartDate");
			}
		}
		
		/// <summary>
		/// State of the Action Card
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("state")]
		public Microsoft.Xrm.Sdk.OptionSetValue State
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("state");
			}
			set
			{
				this.OnPropertyChanging("State");
				this.SetAttributeValue("state", value);
				this.OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// Title of the ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.OnPropertyChanging("Title");
				this.SetAttributeValue("title", value);
				this.OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Version number of the action card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Select whether the visibility should be set to public/private.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("visibility")]
		public System.Nullable<bool> Visibility
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("visibility");
			}
			set
			{
				this.OnPropertyChanging("Visibility");
				this.SetAttributeValue("visibility", value);
				this.OnPropertyChanged("Visibility");
			}
		}
		
		/// <summary>
		/// 1:N ActionCardUserState_ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ActionCardUserState_ActionCard")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActionCardUserState> ActionCardUserState_ActionCard
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActionCardUserState>("ActionCardUserState_ActionCard", null);
			}
			set
			{
				this.OnPropertyChanging("ActionCardUserState_ActionCard");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActionCardUserState>("ActionCardUserState_ActionCard", null, value);
				this.OnPropertyChanged("ActionCardUserState_ActionCard");
			}
		}
		
		/// <summary>
		/// N:1 account_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Account account_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Account>("account_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("account_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Account>("account_actioncard", null, value);
				this.OnPropertyChanged("account_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 appointment_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Appointment appointment_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Appointment>("appointment_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("appointment_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Appointment>("appointment_actioncard", null, value);
				this.OnPropertyChanged("appointment_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_actioncards
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_actioncards")]
		public Xrm.Sdk.PluginRegistration.Entities.BusinessUnit business_unit_actioncards
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BusinessUnit>("business_unit_actioncards", null);
			}
		}
		
		/// <summary>
		/// N:1 cardtype_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cardtype_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.CardType cardtype_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.CardType>("cardtype_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("cardtype_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.CardType>("cardtype_actioncard", null, value);
				this.OnPropertyChanged("cardtype_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 contact_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Contact contact_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Contact>("contact_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("contact_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Contact>("contact_actioncard", null, value);
				this.OnPropertyChanged("contact_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 email_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Email email_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Email>("email_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("email_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Email>("email_actioncard", null, value);
				this.OnPropertyChanged("email_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 fax_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("fax_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Fax fax_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Fax>("fax_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("fax_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Fax>("fax_actioncard", null, value);
				this.OnPropertyChanged("fax_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 incident_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Incident incident_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Incident>("incident_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("incident_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Incident>("incident_actioncard", null, value);
				this.OnPropertyChanged("incident_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 Lead_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Lead Lead_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Lead>("Lead_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("Lead_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Lead>("Lead_actioncard", null, value);
				this.OnPropertyChanged("Lead_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 letter_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("letter_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Letter letter_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Letter>("letter_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("letter_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Letter>("letter_actioncard", null, value);
				this.OnPropertyChanged("letter_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_createdby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_actioncardbase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_actioncardbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_createdonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_actioncardbase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_actioncardbase_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_actioncardbase_createdonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_actioncardbase_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_actioncardbase_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_modifiedby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_actioncardbase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_actioncardbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_modifiedonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_actioncardbase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_actioncardbase_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_actioncardbase_modifiedonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_actioncardbase_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_actioncardbase_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 opportunity_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("opportunity_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Opportunity opportunity_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Opportunity>("opportunity_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("opportunity_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Opportunity>("opportunity_actioncard", null, value);
				this.OnPropertyChanged("opportunity_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 phonecall_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("phonecall_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.PhoneCall phonecall_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.PhoneCall>("phonecall_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("phonecall_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.PhoneCall>("phonecall_actioncard", null, value);
				this.OnPropertyChanged("phonecall_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 recurringappointmentmaster_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.RecurringAppointmentMaster recurringappointmentmaster_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.RecurringAppointmentMaster>("recurringappointmentmaster_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.RecurringAppointmentMaster>("recurringappointmentmaster_actioncard", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 serviceappointment_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.ServiceAppointment serviceappointment_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.ServiceAppointment>("serviceappointment_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("serviceappointment_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.ServiceAppointment>("serviceappointment_actioncard", null, value);
				this.OnPropertyChanged("serviceappointment_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 task_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("task_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.Task task_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Task>("task_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("task_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Task>("task_actioncard", null, value);
				this.OnPropertyChanged("task_actioncard");
			}
		}
		
		/// <summary>
		/// N:1 transactioncurrency_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_actioncard")]
		public Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency transactioncurrency_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("transactioncurrency_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_actioncard");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("transactioncurrency_actioncard", null, value);
				this.OnPropertyChanged("transactioncurrency_actioncard");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public ActionCard(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["actioncardid"] = base.Id;
                        break;
                    case "actioncardid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public virtual actioncard_source? SourceEnum
		{
			get
			{
				return ((actioncard_source?)(EntityOptionSetEnum.GetEnum(this, "source")));
			}
			set
			{
				Source = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("state")]
		public virtual actioncard_state? StateEnum
		{
			get
			{
				return ((actioncard_state?)(EntityOptionSetEnum.GetEnum(this, "state")));
			}
			set
			{
				State = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}