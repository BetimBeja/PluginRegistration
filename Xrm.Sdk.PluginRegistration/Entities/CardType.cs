//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	/// <summary>
	/// To provide master data for the card types list. For internal use only
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("cardtype")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class CardType : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string Actions = "actions";
			public const string BoolCardOption = "boolcardoption";
			public const string CardName = "cardname";
			public const string CardType1 = "cardtype";
			public const string CardTypeIcon = "cardtypeicon";
			public const string CardTypeId = "cardtypeid";
			public const string Id = "cardtypeid";
			public const string ClientAvailability = "clientavailability";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ExchangeRate = "exchangerate";
			public const string GroupType = "grouptype";
			public const string HasSnoozeDismiss = "hassnoozedismiss";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IntCardOption = "intcardoption";
			public const string IsBaseCard = "isbasecard";
			public const string IsEnabled = "isenabled";
			public const string IsLiveOnly = "isliveonly";
			public const string IsPreviewCard = "ispreviewcard";
			public const string LastSyncTime = "lastsynctime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PublisherName = "publishername";
			public const string ScheduleTime = "scheduletime";
			public const string SoftTitle = "softtitle";
			public const string StringCardOption = "stringcardoption";
			public const string SummaryText = "summarytext";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string VersionNumber = "versionnumber";
			public const string lk_cardtype_createdby = "lk_cardtype_createdby";
			public const string lk_cardtype_createdonbehalfby = "lk_cardtype_createdonbehalfby";
			public const string lk_cardtype_modifiedby = "lk_cardtype_modifiedby";
			public const string lk_cardtype_modifiedonbehalfby = "lk_cardtype_modifiedonbehalfby";
			public const string transactioncurrency_cardtype = "transactioncurrency_cardtype";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public CardType() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "cardtype";
		
		public const string PrimaryIdAttribute = "cardtypeid";
		
		public const string PrimaryNameAttribute = "cardname";
		
		public const int EntityTypeCode = 9983;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actions")]
		public string Actions
		{
			get
			{
				return this.GetAttributeValue<string>("actions");
			}
			set
			{
				this.OnPropertyChanging("Actions");
				this.SetAttributeValue("actions", value);
				this.OnPropertyChanged("Actions");
			}
		}
		
		/// <summary>
		/// Bolean option for a cardtype.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("boolcardoption")]
		public System.Nullable<bool> BoolCardOption
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("boolcardoption");
			}
			set
			{
				this.OnPropertyChanging("BoolCardOption");
				this.SetAttributeValue("boolcardoption", value);
				this.OnPropertyChanged("BoolCardOption");
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardname")]
		public string CardName
		{
			get
			{
				return this.GetAttributeValue<string>("cardname");
			}
			set
			{
				this.OnPropertyChanging("CardName");
				this.SetAttributeValue("cardname", value);
				this.OnPropertyChanged("CardName");
			}
		}
		
		/// <summary>
		/// The CardType ENUM value.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtype")]
		public System.Nullable<int> CardType1
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cardtype");
			}
			set
			{
				this.OnPropertyChanging("CardType1");
				this.SetAttributeValue("cardtype", value);
				this.OnPropertyChanged("CardType1");
			}
		}
		
		/// <summary>
		/// The CardTypeIcon of the card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeicon")]
		public string CardTypeIcon
		{
			get
			{
				return this.GetAttributeValue<string>("cardtypeicon");
			}
			set
			{
				this.OnPropertyChanging("CardTypeIcon");
				this.SetAttributeValue("cardtypeicon", value);
				this.OnPropertyChanged("CardTypeIcon");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		public System.Nullable<System.Guid> CardTypeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("cardtypeid");
			}
			set
			{
				this.OnPropertyChanging("CardTypeId");
				this.SetAttributeValue("cardtypeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("CardTypeId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.CardTypeId = value;
			}
		}
		
		/// <summary>
		/// Determines on which client is this card available on.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientavailability")]
		public Microsoft.Xrm.Sdk.OptionSetValue ClientAvailability
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("clientavailability");
			}
			set
			{
				this.OnPropertyChanging("ClientAvailability");
				this.SetAttributeValue("clientavailability", value);
				this.OnPropertyChanged("ClientAvailability");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the CardType with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Specifies the card group type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("grouptype")]
		public string GroupType
		{
			get
			{
				return this.GetAttributeValue<string>("grouptype");
			}
			set
			{
				this.OnPropertyChanging("GroupType");
				this.SetAttributeValue("grouptype", value);
				this.OnPropertyChanged("GroupType");
			}
		}
		
		/// <summary>
		/// Specifies if the card type has snooze dismiss
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hassnoozedismiss")]
		public System.Nullable<bool> HasSnoozeDismiss
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("hassnoozedismiss");
			}
			set
			{
				this.OnPropertyChanging("HasSnoozeDismiss");
				this.SetAttributeValue("hassnoozedismiss", value);
				this.OnPropertyChanged("HasSnoozeDismiss");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Any int option for a cardtype.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("intcardoption")]
		public System.Nullable<int> IntCardOption
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("intcardoption");
			}
			set
			{
				this.OnPropertyChanging("IntCardOption");
				this.SetAttributeValue("intcardoption", value);
				this.OnPropertyChanged("IntCardOption");
			}
		}
		
		/// <summary>
		/// IsBaseCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbasecard")]
		public System.Nullable<bool> IsBaseCard
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbasecard");
			}
			set
			{
				this.OnPropertyChanging("IsBaseCard");
				this.SetAttributeValue("isbasecard", value);
				this.OnPropertyChanged("IsBaseCard");
			}
		}
		
		/// <summary>
		/// IsEnabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isenabled")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isenabled");
			}
			set
			{
				this.OnPropertyChanging("IsEnabled");
				this.SetAttributeValue("isenabled", value);
				this.OnPropertyChanged("IsEnabled");
			}
		}
		
		/// <summary>
		/// IsLiveOnly
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isliveonly")]
		public System.Nullable<bool> IsLiveOnly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isliveonly");
			}
			set
			{
				this.OnPropertyChanging("IsLiveOnly");
				this.SetAttributeValue("isliveonly", value);
				this.OnPropertyChanged("IsLiveOnly");
			}
		}
		
		/// <summary>
		/// IsPreviewCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispreviewcard")]
		public System.Nullable<bool> IsPreviewCard
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispreviewcard");
			}
			set
			{
				this.OnPropertyChanging("IsPreviewCard");
				this.SetAttributeValue("ispreviewcard", value);
				this.OnPropertyChanged("IsPreviewCard");
			}
		}
		
		/// <summary>
		/// This column is updated by the Plugin based on the last fetched data.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsynctime")]
		public System.Nullable<System.DateTime> LastSyncTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsynctime");
			}
			set
			{
				this.OnPropertyChanging("LastSyncTime");
				this.SetAttributeValue("lastsynctime", value);
				this.OnPropertyChanged("LastSyncTime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// The publisher name of card type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishername")]
		public string PublisherName
		{
			get
			{
				return this.GetAttributeValue<string>("publishername");
			}
			set
			{
				this.OnPropertyChanging("PublisherName");
				this.SetAttributeValue("publishername", value);
				this.OnPropertyChanged("PublisherName");
			}
		}
		
		/// <summary>
		/// This column is updated by the Plugin based on the last fetched data.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduletime")]
		public System.Nullable<System.DateTime> ScheduleTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduletime");
			}
			set
			{
				this.OnPropertyChanging("ScheduleTime");
				this.SetAttributeValue("scheduletime", value);
				this.OnPropertyChanged("ScheduleTime");
			}
		}
		
		/// <summary>
		/// The soft title of the card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("softtitle")]
		public string SoftTitle
		{
			get
			{
				return this.GetAttributeValue<string>("softtitle");
			}
			set
			{
				this.OnPropertyChanging("SoftTitle");
				this.SetAttributeValue("softtitle", value);
				this.OnPropertyChanged("SoftTitle");
			}
		}
		
		/// <summary>
		/// Any string option for a cardtype.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stringcardoption")]
		public string StringCardOption
		{
			get
			{
				return this.GetAttributeValue<string>("stringcardoption");
			}
			set
			{
				this.OnPropertyChanging("StringCardOption");
				this.SetAttributeValue("stringcardoption", value);
				this.OnPropertyChanged("StringCardOption");
			}
		}
		
		/// <summary>
		/// The summary text of the card.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("summarytext")]
		public string SummaryText
		{
			get
			{
				return this.GetAttributeValue<string>("summarytext");
			}
			set
			{
				this.OnPropertyChanging("SummaryText");
				this.SetAttributeValue("summarytext", value);
				this.OnPropertyChanged("SummaryText");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the CardType with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N cardtype_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cardtype_actioncard")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActionCard> cardtype_actioncard
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActionCard>("cardtype_actioncard", null);
			}
			set
			{
				this.OnPropertyChanging("cardtype_actioncard");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActionCard>("cardtype_actioncard", null, value);
				this.OnPropertyChanged("cardtype_actioncard");
			}
		}
		
		/// <summary>
		/// 1:N cardtype_actioncardusersettings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cardtype_actioncardusersettings")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActionCardUserSettings> cardtype_actioncardusersettings
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActionCardUserSettings>("cardtype_actioncardusersettings", null);
			}
			set
			{
				this.OnPropertyChanging("cardtype_actioncardusersettings");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActionCardUserSettings>("cardtype_actioncardusersettings", null, value);
				this.OnPropertyChanged("cardtype_actioncardusersettings");
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_createdby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_cardtype_createdby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_cardtype_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_createdonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_cardtype_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_cardtype_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_cardtype_createdonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_cardtype_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_cardtype_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_modifiedby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_cardtype_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_cardtype_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_modifiedonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_cardtype_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_cardtype_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_cardtype_modifiedonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_cardtype_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_cardtype_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 transactioncurrency_cardtype
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_cardtype")]
		public Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency transactioncurrency_cardtype
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("transactioncurrency_cardtype", null);
			}
			set
			{
				this.OnPropertyChanging("transactioncurrency_cardtype");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("transactioncurrency_cardtype", null, value);
				this.OnPropertyChanged("transactioncurrency_cardtype");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public CardType(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["cardtypeid"] = base.Id;
                        break;
                    case "cardtypeid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientavailability")]
		public virtual actioncard_clientavailability? ClientAvailabilityEnum
		{
			get
			{
				return ((actioncard_clientavailability?)(EntityOptionSetEnum.GetEnum(this, "clientavailability")));
			}
			set
			{
				ClientAvailability = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}