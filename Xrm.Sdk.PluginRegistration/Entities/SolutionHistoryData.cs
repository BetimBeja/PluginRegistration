//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	/// <summary>
	/// solution history data
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("solutionhistorydata")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class SolutionHistoryData : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityId = "activityid";
			public const string CorrelationId = "correlationid";
			public const string EndTime = "endtime";
			public const string ErrorCode = "errorcode";
			public const string ExceptionMessage = "exceptionmessage";
			public const string ExceptionStack = "exceptionstack";
			public const string IsManaged = "ismanaged";
			public const string IsMicrosoftPublisher = "ismicrosoftpublisher";
			public const string IsOverwriteCustomizations = "isoverwritecustomizations";
			public const string IsPatch = "ispatch";
			public const string Operation = "operation";
			public const string PackageName = "packagename";
			public const string PackageVersion = "packageversion";
			public const string PublisherName = "publishername";
			public const string Result = "result";
			public const string SolutionHistoryDataId = "solutionhistorydataid";
			public const string Id = "solutionhistorydataid";
			public const string SolutionId = "solutionid";
			public const string SolutionName = "solutionname";
			public const string SolutionVersion = "solutionversion";
			public const string StartTime = "starttime";
			public const string Status = "status";
			public const string SubOperation = "suboperation";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public SolutionHistoryData() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "solutionhistorydata";
		
		public const string PrimaryIdAttribute = "solutionhistorydataid";
		
		public const int EntityTypeCode = 9890;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// The Activity Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		/// <summary>
		/// The Correlation Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationid")]
		public System.Nullable<System.Guid> CorrelationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("correlationid");
			}
			set
			{
				this.OnPropertyChanging("CorrelationId");
				this.SetAttributeValue("correlationid", value);
				this.OnPropertyChanged("CorrelationId");
			}
		}
		
		/// <summary>
		/// DateTime of the end of the solution event.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("endtime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("endtime");
			}
			set
			{
				this.OnPropertyChanging("EndTime");
				this.SetAttributeValue("endtime", value);
				this.OnPropertyChanged("EndTime");
			}
		}
		
		/// <summary>
		/// The error code of the operation performed on the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errorcode")]
		public System.Nullable<int> ErrorCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("errorcode");
			}
			set
			{
				this.OnPropertyChanging("ErrorCode");
				this.SetAttributeValue("errorcode", value);
				this.OnPropertyChanged("ErrorCode");
			}
		}
		
		/// <summary>
		/// The Exception Message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exceptionmessage")]
		public string ExceptionMessage
		{
			get
			{
				return this.GetAttributeValue<string>("exceptionmessage");
			}
			set
			{
				this.OnPropertyChanging("ExceptionMessage");
				this.SetAttributeValue("exceptionmessage", value);
				this.OnPropertyChanged("ExceptionMessage");
			}
		}
		
		/// <summary>
		/// The Exception Stack.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exceptionstack")]
		public string ExceptionStack
		{
			get
			{
				return this.GetAttributeValue<string>("exceptionstack");
			}
			set
			{
				this.OnPropertyChanging("ExceptionStack");
				this.SetAttributeValue("exceptionstack", value);
				this.OnPropertyChanged("ExceptionStack");
			}
		}
		
		/// <summary>
		/// Is Solution Managed
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
			set
			{
				this.OnPropertyChanging("IsManaged");
				this.SetAttributeValue("ismanaged", value);
				this.OnPropertyChanged("IsManaged");
			}
		}
		
		/// <summary>
		/// Is the solution published by a Microsoft publisher.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismicrosoftpublisher")]
		public System.Nullable<bool> IsMicrosoftPublisher
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismicrosoftpublisher");
			}
			set
			{
				this.OnPropertyChanging("IsMicrosoftPublisher");
				this.SetAttributeValue("ismicrosoftpublisher", value);
				this.OnPropertyChanged("IsMicrosoftPublisher");
			}
		}
		
		/// <summary>
		/// Does the event overwrite customizations.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoverwritecustomizations")]
		public System.Nullable<bool> IsOverwriteCustomizations
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoverwritecustomizations");
			}
			set
			{
				this.OnPropertyChanging("IsOverwriteCustomizations");
				this.SetAttributeValue("isoverwritecustomizations", value);
				this.OnPropertyChanged("IsOverwriteCustomizations");
			}
		}
		
		/// <summary>
		/// Is Solution Patch
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispatch")]
		public System.Nullable<bool> IsPatch
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispatch");
			}
			set
			{
				this.OnPropertyChanging("IsPatch");
				this.SetAttributeValue("ispatch", value);
				this.OnPropertyChanged("IsPatch");
			}
		}
		
		/// <summary>
		/// The operation performed on the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operation")]
		public Microsoft.Xrm.Sdk.OptionSetValue Operation
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("operation");
			}
			set
			{
				this.OnPropertyChanging("Operation");
				this.SetAttributeValue("operation", value);
				this.OnPropertyChanged("Operation");
			}
		}
		
		/// <summary>
		/// Name of the package.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("packagename")]
		public string PackageName
		{
			get
			{
				return this.GetAttributeValue<string>("packagename");
			}
			set
			{
				this.OnPropertyChanging("PackageName");
				this.SetAttributeValue("packagename", value);
				this.OnPropertyChanged("PackageName");
			}
		}
		
		/// <summary>
		/// Version of the package.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("packageversion")]
		public string PackageVersion
		{
			get
			{
				return this.GetAttributeValue<string>("packageversion");
			}
			set
			{
				this.OnPropertyChanging("PackageVersion");
				this.SetAttributeValue("packageversion", value);
				this.OnPropertyChanged("PackageVersion");
			}
		}
		
		/// <summary>
		/// Name of the solution's publisher.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishername")]
		public string PublisherName
		{
			get
			{
				return this.GetAttributeValue<string>("publishername");
			}
			set
			{
				this.OnPropertyChanging("PublisherName");
				this.SetAttributeValue("publishername", value);
				this.OnPropertyChanged("PublisherName");
			}
		}
		
		/// <summary>
		/// The result of the operation performed on the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("result")]
		public System.Nullable<int> Result
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("result");
			}
			set
			{
				this.OnPropertyChanging("Result");
				this.SetAttributeValue("result", value);
				this.OnPropertyChanged("Result");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionhistorydataid")]
		public System.Nullable<System.Guid> SolutionHistoryDataId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionhistorydataid");
			}
			set
			{
				this.OnPropertyChanging("SolutionHistoryDataId");
				this.SetAttributeValue("solutionhistorydataid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("SolutionHistoryDataId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionhistorydataid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.SolutionHistoryDataId = value;
			}
		}
		
		/// <summary>
		/// The Solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
			set
			{
				this.OnPropertyChanging("SolutionId");
				this.SetAttributeValue("solutionid", value);
				this.OnPropertyChanged("SolutionId");
			}
		}
		
		/// <summary>
		/// Name of the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionname")]
		public string SolutionName
		{
			get
			{
				return this.GetAttributeValue<string>("solutionname");
			}
			set
			{
				this.OnPropertyChanging("SolutionName");
				this.SetAttributeValue("solutionname", value);
				this.OnPropertyChanged("SolutionName");
			}
		}
		
		/// <summary>
		/// The Version of the Solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionversion")]
		public string SolutionVersion
		{
			get
			{
				return this.GetAttributeValue<string>("solutionversion");
			}
			set
			{
				this.OnPropertyChanging("SolutionVersion");
				this.SetAttributeValue("solutionversion", value);
				this.OnPropertyChanged("SolutionVersion");
			}
		}
		
		/// <summary>
		/// DateTime of the start of the solution event.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("starttime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("starttime");
			}
			set
			{
				this.OnPropertyChanging("StartTime");
				this.SetAttributeValue("starttime", value);
				this.OnPropertyChanged("StartTime");
			}
		}
		
		/// <summary>
		/// The status of the operation performed on the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("status")]
		public Microsoft.Xrm.Sdk.OptionSetValue Status
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("status");
			}
			set
			{
				this.OnPropertyChanging("Status");
				this.SetAttributeValue("status", value);
				this.OnPropertyChanged("Status");
			}
		}
		
		/// <summary>
		/// The suboperation performed on the solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suboperation")]
		public Microsoft.Xrm.Sdk.OptionSetValue SubOperation
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("suboperation");
			}
			set
			{
				this.OnPropertyChanging("SubOperation");
				this.SetAttributeValue("suboperation", value);
				this.OnPropertyChanged("SubOperation");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public SolutionHistoryData(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["solutionhistorydataid"] = base.Id;
                        break;
                    case "solutionhistorydataid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operation")]
		public virtual solutionhistorydata_operation? OperationEnum
		{
			get
			{
				return ((solutionhistorydata_operation?)(EntityOptionSetEnum.GetEnum(this, "operation")));
			}
			set
			{
				Operation = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("status")]
		public virtual solutionhistorydata_status? StatusEnum
		{
			get
			{
				return ((solutionhistorydata_status?)(EntityOptionSetEnum.GetEnum(this, "status")));
			}
			set
			{
				Status = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("suboperation")]
		public virtual solutionhistorydata_suboperation? SubOperationEnum
		{
			get
			{
				return ((solutionhistorydata_suboperation?)(EntityOptionSetEnum.GetEnum(this, "suboperation")));
			}
			set
			{
				SubOperation = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}