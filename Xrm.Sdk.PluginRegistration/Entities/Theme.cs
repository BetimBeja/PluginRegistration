//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum ThemeState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Information that's used to set custom visual theme options for client applications.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("theme")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class Theme : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string AccentColor = "accentcolor";
			public const string BackgroundColor = "backgroundcolor";
			public const string ControlBorder = "controlborder";
			public const string ControlShade = "controlshade";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string DefaultCustomEntityColor = "defaultcustomentitycolor";
			public const string DefaultEntityColor = "defaultentitycolor";
			public const string ExchangeRate = "exchangerate";
			public const string GlobalLinkColor = "globallinkcolor";
			public const string HeaderColor = "headercolor";
			public const string HoverLinkEffect = "hoverlinkeffect";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDefaultTheme = "isdefaulttheme";
			public const string LogoId = "logoid";
			public const string LogoToolTip = "logotooltip";
			public const string MainColor = "maincolor";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string NavBarBackgroundColor = "navbarbackgroundcolor";
			public const string NavBarShelfColor = "navbarshelfcolor";
			public const string OrganizationId = "organizationid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PageHeaderBackgroundColor = "pageheaderbackgroundcolor";
			public const string PanelHeaderBackgroundColor = "panelheaderbackgroundcolor";
			public const string ProcessControlColor = "processcontrolcolor";
			public const string SelectedLinkEffect = "selectedlinkeffect";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string ThemeId = "themeid";
			public const string Id = "themeid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string Type = "type";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string lk_theme_createdby = "lk_theme_createdby";
			public const string lk_theme_createdonbehalfby = "lk_theme_createdonbehalfby";
			public const string lk_theme_logoid = "lk_theme_logoid";
			public const string lk_theme_modifiedby = "lk_theme_modifiedby";
			public const string lk_theme_modifiedonbehalfby = "lk_theme_modifiedonbehalfby";
			public const string organization_theme = "organization_theme";
			public const string TransactionCurrency_Theme = "TransactionCurrency_Theme";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Theme() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "theme";
		
		public const string PrimaryIdAttribute = "themeid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const int EntityTypeCode = 2015;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Choose the Unified Interface secondary theme color to be used on the process control
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accentcolor")]
		public string AccentColor
		{
			get
			{
				return this.GetAttributeValue<string>("accentcolor");
			}
			set
			{
				this.OnPropertyChanging("AccentColor");
				this.SetAttributeValue("accentcolor", value);
				this.OnPropertyChanged("AccentColor");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("backgroundcolor")]
		public string BackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("backgroundcolor");
			}
			set
			{
				this.OnPropertyChanging("BackgroundColor");
				this.SetAttributeValue("backgroundcolor", value);
				this.OnPropertyChanged("BackgroundColor");
			}
		}
		
		/// <summary>
		/// Choose the color that controls will use for borders
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("controlborder")]
		public string ControlBorder
		{
			get
			{
				return this.GetAttributeValue<string>("controlborder");
			}
			set
			{
				this.OnPropertyChanging("ControlBorder");
				this.SetAttributeValue("controlborder", value);
				this.OnPropertyChanged("ControlBorder");
			}
		}
		
		/// <summary>
		/// Choose the background color for controls to use to indicate when you hover over items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("controlshade")]
		public string ControlShade
		{
			get
			{
				return this.GetAttributeValue<string>("controlshade");
			}
			set
			{
				this.OnPropertyChanging("ControlShade");
				this.SetAttributeValue("controlshade", value);
				this.OnPropertyChanged("ControlShade");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Choose the default custom entity color if no color is assigned
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcustomentitycolor")]
		public string DefaultCustomEntityColor
		{
			get
			{
				return this.GetAttributeValue<string>("defaultcustomentitycolor");
			}
			set
			{
				this.OnPropertyChanging("DefaultCustomEntityColor");
				this.SetAttributeValue("defaultcustomentitycolor", value);
				this.OnPropertyChanged("DefaultCustomEntityColor");
			}
		}
		
		/// <summary>
		/// Choose the default color for system entities if no color is assigned
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultentitycolor")]
		public string DefaultEntityColor
		{
			get
			{
				return this.GetAttributeValue<string>("defaultentitycolor");
			}
			set
			{
				this.OnPropertyChanging("DefaultEntityColor");
				this.SetAttributeValue("defaultentitycolor", value);
				this.OnPropertyChanged("DefaultEntityColor");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the Theme with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Choose the color for all links, such as e-mail address and lookup links, and for all buttons that are in focus
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globallinkcolor")]
		public string GlobalLinkColor
		{
			get
			{
				return this.GetAttributeValue<string>("globallinkcolor");
			}
			set
			{
				this.OnPropertyChanging("GlobalLinkColor");
				this.SetAttributeValue("globallinkcolor", value);
				this.OnPropertyChanged("GlobalLinkColor");
			}
		}
		
		/// <summary>
		/// Choose the color for title text, such as form tab labels
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("headercolor")]
		public string HeaderColor
		{
			get
			{
				return this.GetAttributeValue<string>("headercolor");
			}
			set
			{
				this.OnPropertyChanging("HeaderColor");
				this.SetAttributeValue("headercolor", value);
				this.OnPropertyChanged("HeaderColor");
			}
		}
		
		/// <summary>
		/// Choose the color that commands or lists will use to indicate hovered over items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hoverlinkeffect")]
		public string HoverLinkEffect
		{
			get
			{
				return this.GetAttributeValue<string>("hoverlinkeffect");
			}
			set
			{
				this.OnPropertyChanging("HoverLinkEffect");
				this.SetAttributeValue("hoverlinkeffect", value);
				this.OnPropertyChanged("HoverLinkEffect");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Default status of theme.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaulttheme")]
		public System.Nullable<bool> IsDefaultTheme
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefaulttheme");
			}
			set
			{
				this.OnPropertyChanging("IsDefaultTheme");
				this.SetAttributeValue("isdefaulttheme", value);
				this.OnPropertyChanged("IsDefaultTheme");
			}
		}
		
		/// <summary>
		/// Upload a web resource to use as a logo. Recommended dimensions are a height of 50 pixels and a maximum width of 400 pixels.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logoid")]
		public Microsoft.Xrm.Sdk.EntityReference LogoId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("logoid");
			}
			set
			{
				this.OnPropertyChanging("LogoId");
				this.SetAttributeValue("logoid", value);
				this.OnPropertyChanged("LogoId");
			}
		}
		
		/// <summary>
		/// Enter text that will be used as the tooltip and alt text for the logo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logotooltip")]
		public string LogoToolTip
		{
			get
			{
				return this.GetAttributeValue<string>("logotooltip");
			}
			set
			{
				this.OnPropertyChanging("LogoToolTip");
				this.SetAttributeValue("logotooltip", value);
				this.OnPropertyChanged("LogoToolTip");
			}
		}
		
		/// <summary>
		/// Choose the Unified Interface primary theme color to be used on main command bar, buttons and tabs
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maincolor")]
		public string MainColor
		{
			get
			{
				return this.GetAttributeValue<string>("maincolor");
			}
			set
			{
				this.OnPropertyChanging("MainColor");
				this.SetAttributeValue("maincolor", value);
				this.OnPropertyChanged("MainColor");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// The name of the Theme Entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Choose the primary Navigation Bar background color
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("navbarbackgroundcolor")]
		public string NavBarBackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("navbarbackgroundcolor");
			}
			set
			{
				this.OnPropertyChanging("NavBarBackgroundColor");
				this.SetAttributeValue("navbarbackgroundcolor", value);
				this.OnPropertyChanged("NavBarBackgroundColor");
			}
		}
		
		/// <summary>
		/// Choose the secondary Navigation Bar background color
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("navbarshelfcolor")]
		public string NavBarShelfColor
		{
			get
			{
				return this.GetAttributeValue<string>("navbarshelfcolor");
			}
			set
			{
				this.OnPropertyChanging("NavBarShelfColor");
				this.SetAttributeValue("navbarshelfcolor", value);
				this.OnPropertyChanged("NavBarShelfColor");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Choose the page header background color
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pageheaderbackgroundcolor")]
		public string PageHeaderBackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("pageheaderbackgroundcolor");
			}
			set
			{
				this.OnPropertyChanging("PageHeaderBackgroundColor");
				this.SetAttributeValue("pageheaderbackgroundcolor", value);
				this.OnPropertyChanged("PageHeaderBackgroundColor");
			}
		}
		
		/// <summary>
		/// Choose the panel header background color
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("panelheaderbackgroundcolor")]
		public string PanelHeaderBackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("panelheaderbackgroundcolor");
			}
			set
			{
				this.OnPropertyChanging("PanelHeaderBackgroundColor");
				this.SetAttributeValue("panelheaderbackgroundcolor", value);
				this.OnPropertyChanged("PanelHeaderBackgroundColor");
			}
		}
		
		/// <summary>
		/// Choose the primary background color for process controls
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcontrolcolor")]
		public string ProcessControlColor
		{
			get
			{
				return this.GetAttributeValue<string>("processcontrolcolor");
			}
			set
			{
				this.OnPropertyChanging("ProcessControlColor");
				this.SetAttributeValue("processcontrolcolor", value);
				this.OnPropertyChanged("ProcessControlColor");
			}
		}
		
		/// <summary>
		/// Choose the color that commands or lists will use to indicate selected items
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("selectedlinkeffect")]
		public string SelectedLinkEffect
		{
			get
			{
				return this.GetAttributeValue<string>("selectedlinkeffect");
			}
			set
			{
				this.OnPropertyChanging("SelectedLinkEffect");
				this.SetAttributeValue("selectedlinkeffect", value);
				this.OnPropertyChanged("SelectedLinkEffect");
			}
		}
		
		/// <summary>
		/// Status of the Theme
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Xrm.Sdk.PluginRegistration.Entities.ThemeState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Xrm.Sdk.PluginRegistration.Entities.ThemeState)(System.Enum.ToObject(typeof(Xrm.Sdk.PluginRegistration.Entities.ThemeState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Theme
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("themeid")]
		public System.Nullable<System.Guid> ThemeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("themeid");
			}
			set
			{
				this.OnPropertyChanging("ThemeId");
				this.SetAttributeValue("themeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ThemeId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("themeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ThemeId = value;
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the Theme with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Define type of theme.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public System.Nullable<bool> Type
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("type");
			}
			set
			{
				this.OnPropertyChanging("Type");
				this.SetAttributeValue("type", value);
				this.OnPropertyChanged("Type");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N theme_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation> theme_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation>("theme_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("theme_AsyncOperations");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation>("theme_AsyncOperations", null, value);
				this.OnPropertyChanged("theme_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N theme_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.BulkDeleteFailure> theme_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.BulkDeleteFailure>("theme_BulkDeleteFailures", null);
			}
			set
			{
				this.OnPropertyChanging("theme_BulkDeleteFailures");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.BulkDeleteFailure>("theme_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("theme_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N theme_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ProcessSession> theme_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessSession>("theme_ProcessSession", null);
			}
			set
			{
				this.OnPropertyChanging("theme_ProcessSession");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessSession>("theme_ProcessSession", null, value);
				this.OnPropertyChanged("theme_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N theme_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData> theme_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData>("theme_UserEntityInstanceDatas", null);
			}
			set
			{
				this.OnPropertyChanging("theme_UserEntityInstanceDatas");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData>("theme_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("theme_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_createdby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_theme_createdby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_theme_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_createdonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_theme_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_theme_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_theme_createdonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_theme_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_theme_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_logoid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logoid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_logoid")]
		public Xrm.Sdk.PluginRegistration.Entities.WebResource lk_theme_logoid
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.WebResource>("lk_theme_logoid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_theme_logoid");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.WebResource>("lk_theme_logoid", null, value);
				this.OnPropertyChanged("lk_theme_logoid");
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_modifiedby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_theme_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_theme_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_modifiedonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_theme_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_theme_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_theme_modifiedonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_theme_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_theme_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 organization_theme
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_theme")]
		public Xrm.Sdk.PluginRegistration.Entities.Organization organization_theme
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Organization>("organization_theme", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Theme
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Theme")]
		public Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency TransactionCurrency_Theme
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("TransactionCurrency_Theme", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_Theme");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("TransactionCurrency_Theme", null, value);
				this.OnPropertyChanged("TransactionCurrency_Theme");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Theme(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["themeid"] = base.Id;
                        break;
                    case "themeid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual theme_statuscode? StatusCodeEnum
		{
			get
			{
				return ((theme_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}