//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum WorkflowState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Activated = 1,
	}
	
	/// <summary>
	/// Set of logical rules that define the steps necessary to automate a specific business process, task, or set of actions to be performed.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("workflow")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class Workflow : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActiveWorkflowId = "activeworkflowid";
			public const string AsyncAutoDelete = "asyncautodelete";
			public const string BusinessProcessType = "businessprocesstype";
			public const string Category = "category";
			public const string ClientData = "clientdata";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreateStage = "createstage";
			public const string DeleteStage = "deletestage";
			public const string Description = "description";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string FormId = "formid";
			public const string InputParameters = "inputparameters";
			public const string IntroducedVersion = "introducedversion";
			public const string IsCrmUIWorkflow = "iscrmuiworkflow";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsTransacted = "istransacted";
			public const string LanguageCode = "languagecode";
			public const string Mode = "mode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OnDemand = "ondemand";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentWorkflowId = "parentworkflowid";
			public const string PluginTypeId = "plugintypeid";
			public const string PrimaryEntity = "primaryentity";
			public const string ProcessOrder = "processorder";
			public const string ProcessRoleAssignment = "processroleassignment";
			public const string Rank = "rank";
			public const string RendererObjectTypeCode = "rendererobjecttypecode";
			public const string RunAs = "runas";
			public const string Scope = "scope";
			public const string SdkMessageId = "sdkmessageid";
			public const string SolutionId = "solutionid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subprocess = "subprocess";
			public const string SyncWorkflowLogOnFailure = "syncworkflowlogonfailure";
			public const string TriggerOnCreate = "triggeroncreate";
			public const string TriggerOnDelete = "triggerondelete";
			public const string TriggerOnUpdateAttributeList = "triggeronupdateattributelist";
			public const string Type = "type";
			public const string UIData = "uidata";
			public const string UniqueName = "uniquename";
			public const string UpdateStage = "updatestage";
			public const string VersionNumber = "versionnumber";
			public const string WorkflowId = "workflowid";
			public const string Id = "workflowid";
			public const string WorkflowIdUnique = "workflowidunique";
			public const string Xaml = "xaml";
			public const string business_unit_workflow = "business_unit_workflow";
			public const string system_user_workflow = "system_user_workflow";
			public const string team_workflow = "team_workflow";
			public const string Referencingworkflow_active_workflow = "workflow_active_workflow";
			public const string workflow_createdby = "workflow_createdby";
			public const string workflow_createdonbehalfby = "workflow_createdonbehalfby";
			public const string workflow_modifiedby = "workflow_modifiedby";
			public const string workflow_modifiedonbehalfby = "workflow_modifiedonbehalfby";
			public const string Referencingworkflow_parent_workflow = "workflow_parent_workflow";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Workflow() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "workflow";
		
		public const string PrimaryIdAttribute = "workflowid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const int EntityTypeCode = 4703;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the latest activation record for the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeworkflowid")]
		public Microsoft.Xrm.Sdk.EntityReference ActiveWorkflowId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("activeworkflowid");
			}
		}
		
		/// <summary>
		/// Indicates whether the asynchronous system job is automatically deleted on completion.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("asyncautodelete")]
		public System.Nullable<bool> AsyncAutoDelete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("asyncautodelete");
			}
			set
			{
				this.OnPropertyChanging("AsyncAutoDelete");
				this.SetAttributeValue("asyncautodelete", value);
				this.OnPropertyChanged("AsyncAutoDelete");
			}
		}
		
		/// <summary>
		/// Business Process Type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessprocesstype")]
		public Microsoft.Xrm.Sdk.OptionSetValue BusinessProcessType
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("businessprocesstype");
			}
			set
			{
				this.OnPropertyChanging("BusinessProcessType");
				this.SetAttributeValue("businessprocesstype", value);
				this.OnPropertyChanged("BusinessProcessType");
			}
		}
		
		/// <summary>
		/// Category of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public Microsoft.Xrm.Sdk.OptionSetValue Category
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("category");
			}
			set
			{
				this.OnPropertyChanging("Category");
				this.SetAttributeValue("category", value);
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Business logic converted into client data
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientdata")]
		public string ClientData
		{
			get
			{
				return this.GetAttributeValue<string>("clientdata");
			}
			set
			{
				this.OnPropertyChanging("ClientData");
				this.SetAttributeValue("clientdata", value);
				this.OnPropertyChanged("ClientData");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public Microsoft.Xrm.Sdk.OptionSetValue ComponentState
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("componentstate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the process was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Stage of the process when triggered on Create.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createstage")]
		public Microsoft.Xrm.Sdk.OptionSetValue CreateStage
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("createstage");
			}
			set
			{
				this.OnPropertyChanging("CreateStage");
				this.SetAttributeValue("createstage", value);
				this.OnPropertyChanged("CreateStage");
			}
		}
		
		/// <summary>
		/// Stage of the process when triggered on Delete.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deletestage")]
		public Microsoft.Xrm.Sdk.OptionSetValue DeleteStage
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("deletestage");
			}
			set
			{
				this.OnPropertyChanging("DeleteStage");
				this.SetAttributeValue("deletestage", value);
				this.OnPropertyChanged("DeleteStage");
			}
		}
		
		/// <summary>
		/// Description of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Shows the default image for the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.OnPropertyChanging("EntityImage");
				this.SetAttributeValue("entityimage", value);
				this.OnPropertyChanged("EntityImage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated form.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("formid")]
		public System.Nullable<System.Guid> FormId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("formid");
			}
			set
			{
				this.OnPropertyChanging("FormId");
				this.SetAttributeValue("formid", value);
				this.OnPropertyChanged("FormId");
			}
		}
		
		/// <summary>
		/// Input parameters to the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inputparameters")]
		public string InputParameters
		{
			get
			{
				return this.GetAttributeValue<string>("inputparameters");
			}
			set
			{
				this.OnPropertyChanging("InputParameters");
				this.SetAttributeValue("inputparameters", value);
				this.OnPropertyChanged("InputParameters");
			}
		}
		
		/// <summary>
		/// Version in which the form is introduced.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.OnPropertyChanging("IntroducedVersion");
				this.SetAttributeValue("introducedversion", value);
				this.OnPropertyChanged("IntroducedVersion");
			}
		}
		
		/// <summary>
		/// Indicates whether the process was created using the Microsoft Dynamics 365 Web application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscrmuiworkflow")]
		public System.Nullable<bool> IsCrmUIWorkflow
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscrmuiworkflow");
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component can be customized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.OnPropertyChanging("IsCustomizable");
				this.SetAttributeValue("iscustomizable", value);
				this.OnPropertyChanged("IsCustomizable");
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Whether or not the steps in the process are executed in a single transaction.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("istransacted")]
		public System.Nullable<bool> IsTransacted
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("istransacted");
			}
			set
			{
				this.OnPropertyChanging("IsTransacted");
				this.SetAttributeValue("istransacted", value);
				this.OnPropertyChanged("IsTransacted");
			}
		}
		
		/// <summary>
		/// Language of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagecode")]
		public System.Nullable<int> LanguageCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languagecode");
			}
			set
			{
				this.OnPropertyChanging("LanguageCode");
				this.SetAttributeValue("languagecode", value);
				this.OnPropertyChanged("LanguageCode");
			}
		}
		
		/// <summary>
		/// Shows the mode of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mode")]
		public Microsoft.Xrm.Sdk.OptionSetValue Mode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("mode");
			}
			set
			{
				this.OnPropertyChanging("Mode");
				this.SetAttributeValue("mode", value);
				this.OnPropertyChanged("Mode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who last modified the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the process was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Name of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Indicates whether the process is able to run as an on-demand process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ondemand")]
		public System.Nullable<bool> OnDemand
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ondemand");
			}
			set
			{
				this.OnPropertyChanging("OnDemand");
				this.SetAttributeValue("ondemand", value);
				this.OnPropertyChanged("OnDemand");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the definition for process activation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentworkflowid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentWorkflowId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentworkflowid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the plug-in type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plugintypeid")]
		public Microsoft.Xrm.Sdk.EntityReference PluginTypeId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("plugintypeid");
			}
		}
		
		/// <summary>
		/// Primary entity for the process. The process can be associated for one or more SDK operations defined on the primary entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primaryentity")]
		public string PrimaryEntity
		{
			get
			{
				return this.GetAttributeValue<string>("primaryentity");
			}
			set
			{
				this.OnPropertyChanging("PrimaryEntity");
				this.SetAttributeValue("primaryentity", value);
				this.OnPropertyChanged("PrimaryEntity");
			}
		}
		
		/// <summary>
		/// Type the business process flow order.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processorder")]
		public System.Nullable<int> ProcessOrder
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("processorder");
			}
			set
			{
				this.OnPropertyChanging("ProcessOrder");
				this.SetAttributeValue("processorder", value);
				this.OnPropertyChanged("ProcessOrder");
			}
		}
		
		/// <summary>
		/// Contains the role assignment for the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processroleassignment")]
		public string ProcessRoleAssignment
		{
			get
			{
				return this.GetAttributeValue<string>("processroleassignment");
			}
			set
			{
				this.OnPropertyChanging("ProcessRoleAssignment");
				this.SetAttributeValue("processroleassignment", value);
				this.OnPropertyChanged("ProcessRoleAssignment");
			}
		}
		
		/// <summary>
		/// Indicates the rank for order of execution for the synchronous workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rank")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("rank");
			}
			set
			{
				this.OnPropertyChanging("Rank");
				this.SetAttributeValue("rank", value);
				this.OnPropertyChanged("Rank");
			}
		}
		
		/// <summary>
		/// The renderer type of Workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rendererobjecttypecode")]
		public string RendererObjectTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("rendererobjecttypecode");
			}
			set
			{
				this.OnPropertyChanging("RendererObjectTypeCode");
				this.SetAttributeValue("rendererobjecttypecode", value);
				this.OnPropertyChanged("RendererObjectTypeCode");
			}
		}
		
		/// <summary>
		/// Specifies the system user account under which a workflow executes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runas")]
		public Microsoft.Xrm.Sdk.OptionSetValue RunAs
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("runas");
			}
			set
			{
				this.OnPropertyChanging("RunAs");
				this.SetAttributeValue("runas", value);
				this.OnPropertyChanged("RunAs");
			}
		}
		
		/// <summary>
		/// Scope of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scope")]
		public Microsoft.Xrm.Sdk.OptionSetValue Scope
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("scope");
			}
			set
			{
				this.OnPropertyChanging("Scope");
				this.SetAttributeValue("scope", value);
				this.OnPropertyChanged("Scope");
			}
		}
		
		/// <summary>
		/// Unique identifier of the SDK Message associated with this workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sdkmessageid")]
		public Microsoft.Xrm.Sdk.EntityReference SdkMessageId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sdkmessageid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Status of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Xrm.Sdk.PluginRegistration.Entities.WorkflowState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Xrm.Sdk.PluginRegistration.Entities.WorkflowState)(System.Enum.ToObject(typeof(Xrm.Sdk.PluginRegistration.Entities.WorkflowState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Additional information about status of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Indicates whether the process can be included in other processes as a child process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subprocess")]
		public System.Nullable<bool> Subprocess
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("subprocess");
			}
			set
			{
				this.OnPropertyChanging("Subprocess");
				this.SetAttributeValue("subprocess", value);
				this.OnPropertyChanged("Subprocess");
			}
		}
		
		/// <summary>
		/// Select whether synchronous workflow failures will be saved to log files.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("syncworkflowlogonfailure")]
		public System.Nullable<bool> SyncWorkflowLogOnFailure
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("syncworkflowlogonfailure");
			}
			set
			{
				this.OnPropertyChanging("SyncWorkflowLogOnFailure");
				this.SetAttributeValue("syncworkflowlogonfailure", value);
				this.OnPropertyChanged("SyncWorkflowLogOnFailure");
			}
		}
		
		/// <summary>
		/// Indicates whether the process will be triggered when the primary entity is created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggeroncreate")]
		public System.Nullable<bool> TriggerOnCreate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("triggeroncreate");
			}
			set
			{
				this.OnPropertyChanging("TriggerOnCreate");
				this.SetAttributeValue("triggeroncreate", value);
				this.OnPropertyChanged("TriggerOnCreate");
			}
		}
		
		/// <summary>
		/// Indicates whether the process will be triggered on deletion of the primary entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggerondelete")]
		public System.Nullable<bool> TriggerOnDelete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("triggerondelete");
			}
			set
			{
				this.OnPropertyChanging("TriggerOnDelete");
				this.SetAttributeValue("triggerondelete", value);
				this.OnPropertyChanged("TriggerOnDelete");
			}
		}
		
		/// <summary>
		/// Attributes that trigger the process when updated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggeronupdateattributelist")]
		public string TriggerOnUpdateAttributeList
		{
			get
			{
				return this.GetAttributeValue<string>("triggeronupdateattributelist");
			}
			set
			{
				this.OnPropertyChanging("TriggerOnUpdateAttributeList");
				this.SetAttributeValue("triggeronupdateattributelist", value);
				this.OnPropertyChanged("TriggerOnUpdateAttributeList");
			}
		}
		
		/// <summary>
		/// Type of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public Microsoft.Xrm.Sdk.OptionSetValue Type
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("type");
			}
			set
			{
				this.OnPropertyChanging("Type");
				this.SetAttributeValue("type", value);
				this.OnPropertyChanged("Type");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uidata")]
		public string UIData
		{
			get
			{
				return this.GetAttributeValue<string>("uidata");
			}
		}
		
		/// <summary>
		/// Unique name of the process
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uniquename")]
		public string UniqueName
		{
			get
			{
				return this.GetAttributeValue<string>("uniquename");
			}
			set
			{
				this.OnPropertyChanging("UniqueName");
				this.SetAttributeValue("uniquename", value);
				this.OnPropertyChanged("UniqueName");
			}
		}
		
		/// <summary>
		/// Select the stage a process will be triggered on update.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("updatestage")]
		public Microsoft.Xrm.Sdk.OptionSetValue UpdateStage
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("updatestage");
			}
			set
			{
				this.OnPropertyChanging("UpdateStage");
				this.SetAttributeValue("updatestage", value);
				this.OnPropertyChanged("UpdateStage");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		public System.Nullable<System.Guid> WorkflowId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("workflowid");
			}
			set
			{
				this.OnPropertyChanging("WorkflowId");
				this.SetAttributeValue("workflowid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("WorkflowId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.WorkflowId = value;
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowidunique")]
		public System.Nullable<System.Guid> WorkflowIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("workflowidunique");
			}
		}
		
		/// <summary>
		/// XAML that defines the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("xaml")]
		public string Xaml
		{
			get
			{
				return this.GetAttributeValue<string>("xaml");
			}
			set
			{
				this.OnPropertyChanging("Xaml");
				this.SetAttributeValue("xaml", value);
				this.OnPropertyChanged("Xaml");
			}
		}
		
		/// <summary>
		/// 1:N convertruleitembase_workflowid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("convertruleitembase_workflowid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ConvertRuleItem> convertruleitembase_workflowid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ConvertRuleItem>("convertruleitembase_workflowid", null);
			}
			set
			{
				this.OnPropertyChanging("convertruleitembase_workflowid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ConvertRuleItem>("convertruleitembase_workflowid", null, value);
				this.OnPropertyChanged("convertruleitembase_workflowid");
			}
		}
		
		/// <summary>
		/// 1:N lk_asyncoperation_workflowactivationid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_asyncoperation_workflowactivationid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation> lk_asyncoperation_workflowactivationid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation>("lk_asyncoperation_workflowactivationid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_asyncoperation_workflowactivationid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation>("lk_asyncoperation_workflowactivationid", null, value);
				this.OnPropertyChanged("lk_asyncoperation_workflowactivationid");
			}
		}
		
		/// <summary>
		/// 1:N lk_expiredprocess_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_expiredprocess_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ExpiredProcess> lk_expiredprocess_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ExpiredProcess>("lk_expiredprocess_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_expiredprocess_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ExpiredProcess>("lk_expiredprocess_processid", null, value);
				this.OnPropertyChanged("lk_expiredprocess_processid");
			}
		}
		
		/// <summary>
		/// 1:N lk_leadtoopportunitysalesprocess_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_leadtoopportunitysalesprocess_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.LeadToOpportunitySalesProcess> lk_leadtoopportunitysalesprocess_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.LeadToOpportunitySalesProcess>("lk_leadtoopportunitysalesprocess_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_leadtoopportunitysalesprocess_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.LeadToOpportunitySalesProcess>("lk_leadtoopportunitysalesprocess_processid", null, value);
				this.OnPropertyChanged("lk_leadtoopportunitysalesprocess_processid");
			}
		}
		
		/// <summary>
		/// 1:N lk_newprocess_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_newprocess_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.NewProcess> lk_newprocess_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.NewProcess>("lk_newprocess_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_newprocess_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.NewProcess>("lk_newprocess_processid", null, value);
				this.OnPropertyChanged("lk_newprocess_processid");
			}
		}
		
		/// <summary>
		/// 1:N lk_opportunitysalesprocess_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_opportunitysalesprocess_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.OpportunitySalesProcess> lk_opportunitysalesprocess_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.OpportunitySalesProcess>("lk_opportunitysalesprocess_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_opportunitysalesprocess_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.OpportunitySalesProcess>("lk_opportunitysalesprocess_processid", null, value);
				this.OnPropertyChanged("lk_opportunitysalesprocess_processid");
			}
		}
		
		/// <summary>
		/// 1:N lk_phonetocaseprocess_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_phonetocaseprocess_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.PhoneToCaseProcess> lk_phonetocaseprocess_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.PhoneToCaseProcess>("lk_phonetocaseprocess_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_phonetocaseprocess_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.PhoneToCaseProcess>("lk_phonetocaseprocess_processid", null, value);
				this.OnPropertyChanged("lk_phonetocaseprocess_processid");
			}
		}
		
		/// <summary>
		/// 1:N lk_processsession_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_processsession_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ProcessSession> lk_processsession_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessSession>("lk_processsession_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_processsession_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessSession>("lk_processsession_processid", null, value);
				this.OnPropertyChanged("lk_processsession_processid");
			}
		}
		
		/// <summary>
		/// 1:N lk_translationprocess_processid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_translationprocess_processid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.TranslationProcess> lk_translationprocess_processid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.TranslationProcess>("lk_translationprocess_processid", null);
			}
			set
			{
				this.OnPropertyChanging("lk_translationprocess_processid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.TranslationProcess>("lk_translationprocess_processid", null, value);
				this.OnPropertyChanged("lk_translationprocess_processid");
			}
		}
		
		/// <summary>
		/// 1:N process_processstage
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("process_processstage")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ProcessStage> process_processstage
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessStage>("process_processstage", null);
			}
			set
			{
				this.OnPropertyChanging("process_processstage");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessStage>("process_processstage", null, value);
				this.OnPropertyChanged("process_processstage");
			}
		}
		
		/// <summary>
		/// 1:N process_processtrigger
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("process_processtrigger")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ProcessTrigger> process_processtrigger
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessTrigger>("process_processtrigger", null);
			}
			set
			{
				this.OnPropertyChanging("process_processtrigger");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ProcessTrigger>("process_processtrigger", null, value);
				this.OnPropertyChanged("process_processtrigger");
			}
		}
		
		/// <summary>
		/// 1:N slabase_workflowid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slabase_workflowid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.SLA> slabase_workflowid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SLA>("slabase_workflowid", null);
			}
			set
			{
				this.OnPropertyChanging("slabase_workflowid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SLA>("slabase_workflowid", null, value);
				this.OnPropertyChanged("slabase_workflowid");
			}
		}
		
		/// <summary>
		/// 1:N slaitembase_workflowid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slaitembase_workflowid")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.SLAItem> slaitembase_workflowid
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SLAItem>("slaitembase_workflowid", null);
			}
			set
			{
				this.OnPropertyChanging("slaitembase_workflowid");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SLAItem>("slaitembase_workflowid", null, value);
				this.OnPropertyChanged("slaitembase_workflowid");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_workflow")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData> userentityinstancedata_workflow
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData>("userentityinstancedata_workflow", null);
			}
			set
			{
				this.OnPropertyChanging("userentityinstancedata_workflow");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData>("userentityinstancedata_workflow", null, value);
				this.OnPropertyChanged("userentityinstancedata_workflow");
			}
		}
		
		/// <summary>
		/// 1:N workflow_active_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Workflow> Referencedworkflow_active_workflow
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Workflow>("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.OnPropertyChanging("Referencedworkflow_active_workflow");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Workflow>("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedworkflow_active_workflow");
			}
		}
		
		/// <summary>
		/// 1:N Workflow_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Workflow_Annotation")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Annotation> Workflow_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Annotation>("Workflow_Annotation", null);
			}
			set
			{
				this.OnPropertyChanging("Workflow_Annotation");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Annotation>("Workflow_Annotation", null, value);
				this.OnPropertyChanged("Workflow_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N workflow_dependencies
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_dependencies")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.WorkflowDependency> workflow_dependencies
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.WorkflowDependency>("workflow_dependencies", null);
			}
			set
			{
				this.OnPropertyChanging("workflow_dependencies");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.WorkflowDependency>("workflow_dependencies", null, value);
				this.OnPropertyChanged("workflow_dependencies");
			}
		}
		
		/// <summary>
		/// 1:N workflow_parent_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Workflow> Referencedworkflow_parent_workflow
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Workflow>("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.OnPropertyChanging("Referencedworkflow_parent_workflow");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Workflow>("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("Referencedworkflow_parent_workflow");
			}
		}
		
		/// <summary>
		/// 1:N Workflow_routingrule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Workflow_routingrule")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.RoutingRule> Workflow_routingrule
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.RoutingRule>("Workflow_routingrule", null);
			}
			set
			{
				this.OnPropertyChanging("Workflow_routingrule");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.RoutingRule>("Workflow_routingrule", null, value);
				this.OnPropertyChanged("Workflow_routingrule");
			}
		}
		
		/// <summary>
		/// 1:N Workflow_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Workflow_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.SyncError> Workflow_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SyncError>("Workflow_SyncErrors", null);
			}
			set
			{
				this.OnPropertyChanging("Workflow_SyncErrors");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SyncError>("Workflow_SyncErrors", null, value);
				this.OnPropertyChanged("Workflow_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N workflowid_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflowid_convertrule")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ConvertRule> workflowid_convertrule
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ConvertRule>("workflowid_convertrule", null);
			}
			set
			{
				this.OnPropertyChanging("workflowid_convertrule");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ConvertRule>("workflowid_convertrule", null, value);
				this.OnPropertyChanged("workflowid_convertrule");
			}
		}
		
		/// <summary>
		/// 1:N workflowid_profilerule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflowid_profilerule")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ChannelAccessProfileRule> workflowid_profilerule
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ChannelAccessProfileRule>("workflowid_profilerule", null);
			}
			set
			{
				this.OnPropertyChanging("workflowid_profilerule");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ChannelAccessProfileRule>("workflowid_profilerule", null, value);
				this.OnPropertyChanged("workflowid_profilerule");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_workflow")]
		public Xrm.Sdk.PluginRegistration.Entities.BusinessUnit business_unit_workflow
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BusinessUnit>("business_unit_workflow", null);
			}
		}
		
		/// <summary>
		/// N:1 system_user_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_workflow")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser system_user_workflow
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("system_user_workflow", null);
			}
		}
		
		/// <summary>
		/// N:1 team_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_workflow")]
		public Xrm.Sdk.PluginRegistration.Entities.Team team_workflow
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Team>("team_workflow", null);
			}
		}
		
		/// <summary>
		/// N:1 workflow_active_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeworkflowid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Xrm.Sdk.PluginRegistration.Entities.Workflow Referencingworkflow_active_workflow
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Workflow>("workflow_active_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// N:1 workflow_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_createdby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser workflow_createdby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("workflow_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 workflow_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_createdonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser workflow_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("workflow_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("workflow_createdonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("workflow_createdonbehalfby", null, value);
				this.OnPropertyChanged("workflow_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 workflow_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_modifiedby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser workflow_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("workflow_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 workflow_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_modifiedonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser workflow_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("workflow_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("workflow_modifiedonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("workflow_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("workflow_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 workflow_parent_workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentworkflowid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Xrm.Sdk.PluginRegistration.Entities.Workflow Referencingworkflow_parent_workflow
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Workflow>("workflow_parent_workflow", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public Workflow(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["workflowid"] = base.Id;
                        break;
                    case "workflowid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessprocesstype")]
		public virtual workflow_businessprocesstype? BusinessProcessTypeEnum
		{
			get
			{
				return ((workflow_businessprocesstype?)(EntityOptionSetEnum.GetEnum(this, "businessprocesstype")));
			}
			set
			{
				BusinessProcessType = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public virtual workflow_category? CategoryEnum
		{
			get
			{
				return ((workflow_category?)(EntityOptionSetEnum.GetEnum(this, "category")));
			}
			set
			{
				Category = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentStateEnum
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createstage")]
		public virtual workflow_stage? CreateStageEnum
		{
			get
			{
				return ((workflow_stage?)(EntityOptionSetEnum.GetEnum(this, "createstage")));
			}
			set
			{
				CreateStage = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deletestage")]
		public virtual workflow_stage? DeleteStageEnum
		{
			get
			{
				return ((workflow_stage?)(EntityOptionSetEnum.GetEnum(this, "deletestage")));
			}
			set
			{
				DeleteStage = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mode")]
		public virtual workflow_mode? ModeEnum
		{
			get
			{
				return ((workflow_mode?)(EntityOptionSetEnum.GetEnum(this, "mode")));
			}
			set
			{
				Mode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runas")]
		public virtual workflow_runas? RunAsEnum
		{
			get
			{
				return ((workflow_runas?)(EntityOptionSetEnum.GetEnum(this, "runas")));
			}
			set
			{
				RunAs = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scope")]
		public virtual workflow_scope? ScopeEnum
		{
			get
			{
				return ((workflow_scope?)(EntityOptionSetEnum.GetEnum(this, "scope")));
			}
			set
			{
				Scope = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual workflow_statuscode? StatusCodeEnum
		{
			get
			{
				return ((workflow_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public virtual workflow_type? TypeEnum
		{
			get
			{
				return ((workflow_type?)(EntityOptionSetEnum.GetEnum(this, "type")));
			}
			set
			{
				Type = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("updatestage")]
		public virtual workflow_stage? UpdateStageEnum
		{
			get
			{
				return ((workflow_stage?)(EntityOptionSetEnum.GetEnum(this, "updatestage")));
			}
			set
			{
				UpdateStage = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}