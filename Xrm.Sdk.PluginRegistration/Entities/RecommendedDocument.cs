//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	/// <summary>
	/// Document Suggestions
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recommendeddocument")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class RecommendedDocument : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string AbsoluteUrl = "absoluteurl";
			public const string AssociatedRecordName = "associatedrecordname";
			public const string Author = "author";
			public const string ContentType = "contenttype";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string EditUrl = "editurl";
			public const string ExchangeRate = "exchangerate";
			public const string ExternalDocumentId = "externaldocumentid";
			public const string ExternalModifiedBy = "externalmodifiedby";
			public const string FileSize = "filesize";
			public const string FileType = "filetype";
			public const string FullName = "fullname";
			public const string IconClassName = "iconclassname";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OrganizationId = "organizationid";
			public const string ReadUrl = "readurl";
			public const string RecommendedDocumentId = "recommendeddocumentid";
			public const string Id = "recommendeddocumentid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string Source = "source";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string Version = "version";
			public const string VersionNumber = "versionnumber";
			public const string lk_recommendeddocument_createdby = "lk_recommendeddocument_createdby";
			public const string lk_recommendeddocument_createdonbehalfby = "lk_recommendeddocument_createdonbehalfby";
			public const string lk_recommendeddocument_modifiedby = "lk_recommendeddocument_modifiedby";
			public const string lk_recommendeddocument_modifiedonbehalfby = "lk_recommendeddocument_modifiedonbehalfby";
			public const string organization_recommendeddocument = "organization_recommendeddocument";
			public const string TransactionCurrency_recommendeddocument = "TransactionCurrency_recommendeddocument";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public RecommendedDocument() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "recommendeddocument";
		
		public const string PrimaryIdAttribute = "recommendeddocumentid";
		
		public const string PrimaryNameAttribute = "title";
		
		public const int EntityTypeCode = 1189;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Type the URL where the recommended document is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("absoluteurl")]
		public string AbsoluteUrl
		{
			get
			{
				return this.GetAttributeValue<string>("absoluteurl");
			}
		}
		
		/// <summary>
		/// Shows the associated record name of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("associatedrecordname")]
		public string AssociatedRecordName
		{
			get
			{
				return this.GetAttributeValue<string>("associatedrecordname");
			}
			set
			{
				this.OnPropertyChanging("AssociatedRecordName");
				this.SetAttributeValue("associatedrecordname", value);
				this.OnPropertyChanged("AssociatedRecordName");
			}
		}
		
		/// <summary>
		/// Shows the name of the author of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("author")]
		public string Author
		{
			get
			{
				return this.GetAttributeValue<string>("author");
			}
			set
			{
				this.OnPropertyChanging("Author");
				this.SetAttributeValue("author", value);
				this.OnPropertyChanged("Author");
			}
		}
		
		/// <summary>
		/// Select the document content type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contenttype")]
		public string ContentType
		{
			get
			{
				return this.GetAttributeValue<string>("contenttype");
			}
		}
		
		/// <summary>
		/// Shows the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows the Edit URL of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("editurl")]
		public string EditUrl
		{
			get
			{
				return this.GetAttributeValue<string>("editurl");
			}
		}
		
		/// <summary>
		/// Shows the exchange rate for the currency associated with the recommended document with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Shows the external document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externaldocumentid")]
		public string ExternalDocumentId
		{
			get
			{
				return this.GetAttributeValue<string>("externaldocumentid");
			}
			set
			{
				this.OnPropertyChanging("ExternalDocumentId");
				this.SetAttributeValue("externaldocumentid", value);
				this.OnPropertyChanged("ExternalDocumentId");
			}
		}
		
		/// <summary>
		/// Shows who last updated the document record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalmodifiedby")]
		public string ExternalModifiedBy
		{
			get
			{
				return this.GetAttributeValue<string>("externalmodifiedby");
			}
			set
			{
				this.OnPropertyChanging("ExternalModifiedBy");
				this.SetAttributeValue("externalmodifiedby", value);
				this.OnPropertyChanged("ExternalModifiedBy");
			}
		}
		
		/// <summary>
		/// Shows the file size.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filesize")]
		public System.Nullable<int> FileSize
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("filesize");
			}
		}
		
		/// <summary>
		/// Shows the file type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filetype")]
		public string FileType
		{
			get
			{
				return this.GetAttributeValue<string>("filetype");
			}
		}
		
		/// <summary>
		/// Shows the full name of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fullname")]
		public string FullName
		{
			get
			{
				return this.GetAttributeValue<string>("fullname");
			}
		}
		
		/// <summary>
		/// Stores the Icon Class name of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iconclassname")]
		public string IconClassName
		{
			get
			{
				return this.GetAttributeValue<string>("iconclassname");
			}
		}
		
		/// <summary>
		/// Shows the location of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("location")]
		public string Location
		{
			get
			{
				return this.GetAttributeValue<string>("location");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Shows the Read URL of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readurl")]
		public string ReadUrl
		{
			get
			{
				return this.GetAttributeValue<string>("readurl");
			}
		}
		
		/// <summary>
		/// Shows the recommended document record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendeddocumentid")]
		public System.Nullable<System.Guid> RecommendedDocumentId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("recommendeddocumentid");
			}
			set
			{
				this.OnPropertyChanging("RecommendedDocumentId");
				this.SetAttributeValue("recommendeddocumentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("RecommendedDocumentId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recommendeddocumentid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.RecommendedDocumentId = value;
			}
		}
		
		/// <summary>
		/// Choose the parent record that the recommended document record is associated with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Shows the source storage of the recommended document.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public string Source
		{
			get
			{
				return this.GetAttributeValue<string>("source");
			}
			set
			{
				this.OnPropertyChanging("Source");
				this.SetAttributeValue("source", value);
				this.OnPropertyChanged("Source");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Type a title for the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.OnPropertyChanging("Title");
				this.SetAttributeValue("title", value);
				this.OnPropertyChanged("Title");
			}
		}
		
		/// <summary>
		/// Shows the exchange rate for the currency associated with the recommended document with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Shows the time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Shows the recommended document version.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("version")]
		public string Version
		{
			get
			{
				return this.GetAttributeValue<string>("version");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 lk_recommendeddocument_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recommendeddocument_createdby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_recommendeddocument_createdby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_recommendeddocument_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recommendeddocument_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recommendeddocument_createdonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_recommendeddocument_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_recommendeddocument_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_recommendeddocument_createdonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_recommendeddocument_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_recommendeddocument_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_recommendeddocument_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recommendeddocument_modifiedby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_recommendeddocument_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_recommendeddocument_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recommendeddocument_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recommendeddocument_modifiedonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_recommendeddocument_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_recommendeddocument_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_recommendeddocument_modifiedonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_recommendeddocument_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_recommendeddocument_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 organization_recommendeddocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_recommendeddocument")]
		public Xrm.Sdk.PluginRegistration.Entities.Organization organization_recommendeddocument
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Organization>("organization_recommendeddocument", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_recommendeddocument
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_recommendeddocument")]
		public Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency TransactionCurrency_recommendeddocument
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("TransactionCurrency_recommendeddocument", null);
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrency_recommendeddocument");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("TransactionCurrency_recommendeddocument", null, value);
				this.OnPropertyChanged("TransactionCurrency_recommendeddocument");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public RecommendedDocument(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["recommendeddocumentid"] = base.Id;
                        break;
                    case "recommendeddocumentid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}