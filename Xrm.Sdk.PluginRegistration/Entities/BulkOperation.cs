//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Xrm.Sdk.PluginRegistration.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public enum BulkOperationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Closed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
	}
	
	/// <summary>
	/// System operation used to perform lengthy and asynchronous operations on large data sets, such as distributing a campaign activity or quick campaign.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("bulkoperation")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9369")]
	public partial class BulkOperation : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityAdditionalParams = "activityadditionalparams";
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string Bcc = "bcc";
			public const string BulkOperationNumber = "bulkoperationnumber";
			public const string Cc = "cc";
			public const string Community = "community";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedRecordTypeCode = "createdrecordtypecode";
			public const string Customers = "customers";
			public const string DeliveryLastAttemptedOn = "deliverylastattemptedon";
			public const string DeliveryPriorityCode = "deliveryprioritycode";
			public const string Description = "description";
			public const string ErrorNumber = "errornumber";
			public const string ExchangeItemId = "exchangeitemid";
			public const string ExchangeRate = "exchangerate";
			public const string ExchangeWebLink = "exchangeweblink";
			public const string FailureCount = "failurecount";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string IsBilled = "isbilled";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LeftVoiceMail = "leftvoicemail";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string OnHoldTime = "onholdtime";
			public const string OperationTypeCode = "operationtypecode";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Parameters = "parameters";
			public const string Partners = "partners";
			public const string PostponeActivityProcessingUntil = "postponeactivityprocessinguntil";
			public const string PriorityCode = "prioritycode";
			public const string ProcessId = "processid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RequiredAttendees = "requiredattendees";
			public const string Resources = "resources";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SenderMailboxId = "sendermailboxid";
			public const string SentOn = "senton";
			public const string SeriesId = "seriesid";
			public const string ServiceId = "serviceid";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subject = "subject";
			public const string SuccessCount = "successcount";
			public const string TargetedRecordTypeCode = "targetedrecordtypecode";
			public const string TargetMembersCount = "targetmemberscount";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string To = "to";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string WorkflowInfo = "workflowinfo";
			public const string account_BulkOperations = "account_BulkOperations";
			public const string activity_pointer_BulkOperation = "activity_pointer_BulkOperation";
			public const string bookableresourcebooking_BulkOperations = "bookableresourcebooking_BulkOperations";
			public const string bookableresourcebookingheader_BulkOperations = "bookableresourcebookingheader_BulkOperations";
			public const string bulkoperation_mailbox_sendermailboxid = "bulkoperation_mailbox_sendermailboxid";
			public const string bulkoperation_sla_slaid = "bulkoperation_sla_slaid";
			public const string bulkoperation_sla_slainvokedid = "bulkoperation_sla_slainvokedid";
			public const string bulkoperation_transactioncurrency_transactioncurrencyid = "bulkoperation_transactioncurrency_transactioncurrencyid";
			public const string business_unit_BulkOperation_activities = "business_unit_BulkOperation_activities";
			public const string CampaignActivity_BulkOperations = "CampaignActivity_BulkOperations";
			public const string contact_BulkOperations = "contact_BulkOperations";
			public const string interactionforemail_BulkOperations = "interactionforemail_BulkOperations";
			public const string knowledgearticle_BulkOperations = "knowledgearticle_BulkOperations";
			public const string knowledgebaserecord_BulkOperations = "knowledgebaserecord_BulkOperations";
			public const string lead_BulkOperations = "lead_BulkOperations";
			public const string List_BulkOperations = "List_BulkOperations";
			public const string lk_BulkOperation_createdby = "lk_BulkOperation_createdby";
			public const string lk_BulkOperation_createdonbehalfby = "lk_BulkOperation_createdonbehalfby";
			public const string lk_BulkOperation_modifiedby = "lk_BulkOperation_modifiedby";
			public const string lk_BulkOperation_modifiedonbehalfby = "lk_BulkOperation_modifiedonbehalfby";
			public const string team_BulkOperation = "team_BulkOperation";
			public const string user_BulkOperation = "user_BulkOperation";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public BulkOperation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "bulkoperation";
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public const int EntityTypeCode = 4406;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Additional information provided by the external application as JSON. For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string ActivityAdditionalParams
		{
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			set
			{
				this.OnPropertyChanging("ActivityAdditionalParams");
				this.SetAttributeValue("activityadditionalparams", value);
				this.OnPropertyChanged("ActivityAdditionalParams");
			}
		}
		
		/// <summary>
		/// Unique identifier of the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Actual duration of the bulk operation in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the quick campaign was completed or canceled.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			set
			{
				this.OnPropertyChanging("ActualEnd");
				this.SetAttributeValue("actualend", value);
				this.OnPropertyChanged("ActualEnd");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the activity was started or created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
		}
		
		/// <summary>
		/// Blind Carbon-copy (bcc) recipients of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> Bcc
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Bcc");
				if ((value == null))
				{
					this.SetAttributeValue("bcc", value);
				}
				else
				{
					this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Bcc");
			}
		}
		
		/// <summary>
		/// Shows the number for the quick campaign record, used to identify the quick campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bulkoperationnumber")]
		public string BulkOperationNumber
		{
			get
			{
				return this.GetAttributeValue<string>("bulkoperationnumber");
			}
		}
		
		/// <summary>
		/// Carbon-copy (cc) recipients of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> Cc
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Cc");
				if ((value == null))
				{
					this.SetAttributeValue("cc", value);
				}
				else
				{
					this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Cc");
			}
		}
		
		/// <summary>
		/// Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("community")]
		public Microsoft.Xrm.Sdk.OptionSetValue Community
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("community");
			}
			set
			{
				this.OnPropertyChanging("Community");
				this.SetAttributeValue("community", value);
				this.OnPropertyChanged("Community");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Choose the activity to create that determines how target prospects or customers in this quick campaign are contacted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdrecordtypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue CreatedRecordTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("createdrecordtypecode");
			}
			set
			{
				this.OnPropertyChanging("CreatedRecordTypeCode");
				this.SetAttributeValue("createdrecordtypecode", value);
				this.OnPropertyChanged("CreatedRecordTypeCode");
			}
		}
		
		/// <summary>
		/// Customer with which the activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customers")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> Customers
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("customers");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Customers");
				if ((value == null))
				{
					this.SetAttributeValue("customers", value);
				}
				else
				{
					this.SetAttributeValue("customers", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Customers");
			}
		}
		
		/// <summary>
		/// Date and time when the delivery of the activity was last attempted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliverylastattemptedon")]
		public System.Nullable<System.DateTime> DeliveryLastAttemptedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("deliverylastattemptedon");
			}
		}
		
		/// <summary>
		/// Priority of delivery of the activity to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue DeliveryPriorityCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("deliveryprioritycode");
			}
			set
			{
				this.OnPropertyChanging("DeliveryPriorityCode");
				this.SetAttributeValue("deliveryprioritycode", value);
				this.OnPropertyChanged("DeliveryPriorityCode");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the quick campaign, such as the products or services offered.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
		}
		
		/// <summary>
		/// Shows the error code that is used to troubleshoot issues in the quick campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errornumber")]
		public System.Nullable<int> ErrorNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("errornumber");
			}
			set
			{
				this.OnPropertyChanging("ErrorNumber");
				this.SetAttributeValue("errornumber", value);
				this.OnPropertyChanged("ErrorNumber");
			}
		}
		
		/// <summary>
		/// The message id of activity which is returned from Exchange Server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeitemid")]
		public string ExchangeItemId
		{
			get
			{
				return this.GetAttributeValue<string>("exchangeitemid");
			}
			set
			{
				this.OnPropertyChanging("ExchangeItemId");
				this.SetAttributeValue("exchangeitemid", value);
				this.OnPropertyChanged("ExchangeItemId");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the activitypointer with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Shows the web link of Activity of type email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeweblink")]
		public string ExchangeWebLink
		{
			get
			{
				return this.GetAttributeValue<string>("exchangeweblink");
			}
			set
			{
				this.OnPropertyChanging("ExchangeWebLink");
				this.SetAttributeValue("exchangeweblink", value);
				this.OnPropertyChanged("ExchangeWebLink");
			}
		}
		
		/// <summary>
		/// Number of records which failed in the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("failurecount")]
		public System.Nullable<int> FailureCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("failurecount");
			}
			set
			{
				this.OnPropertyChanging("FailureCount");
				this.SetAttributeValue("failurecount", value);
				this.OnPropertyChanged("FailureCount");
			}
		}
		
		/// <summary>
		/// Person who the activity is from.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> From
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("From");
				if ((value == null))
				{
					this.SetAttributeValue("from", value);
				}
				else
				{
					this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("From");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InstanceTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
		public System.Nullable<bool> IsMapiPrivate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
			}
			set
			{
				this.OnPropertyChanging("IsMapiPrivate");
				this.SetAttributeValue("ismapiprivate", value);
				this.OnPropertyChanged("IsMapiPrivate");
			}
		}
		
		/// <summary>
		/// Information regarding whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// Specifies if the bulk operation was created from a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.OnPropertyChanging("LastOnHoldTime");
				this.SetAttributeValue("lastonholdtime", value);
				this.OnPropertyChanged("LastOnHoldTime");
			}
		}
		
		/// <summary>
		/// Left the voice mail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leftvoicemail")]
		public System.Nullable<bool> LeftVoiceMail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("leftvoicemail");
			}
			set
			{
				this.OnPropertyChanging("LeftVoiceMail");
				this.SetAttributeValue("leftvoicemail", value);
				this.OnPropertyChanged("LeftVoiceMail");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the bulk operation was last modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who last modified the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Select the type of bulk operation process, such as quick campaign or campaign activity distribution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue OperationTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("operationtypecode");
			}
			set
			{
				this.OnPropertyChanging("OperationTypeCode");
				this.SetAttributeValue("operationtypecode", value);
				this.OnPropertyChanged("OperationTypeCode");
			}
		}
		
		/// <summary>
		/// List of optional attendees for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> OptionalAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("OptionalAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("optionalattendees", value);
				}
				else
				{
					this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("OptionalAttendees");
			}
		}
		
		/// <summary>
		/// Person who organized the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> Organizer
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Organizer");
				if ((value == null))
				{
					this.SetAttributeValue("organizer", value);
				}
				else
				{
					this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Organizer");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user that owns the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// XML string that contains the parameters to the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parameters")]
		public string Parameters
		{
			get
			{
				return this.GetAttributeValue<string>("parameters");
			}
			set
			{
				this.OnPropertyChanging("Parameters");
				this.SetAttributeValue("parameters", value);
				this.OnPropertyChanged("Parameters");
			}
		}
		
		/// <summary>
		/// Outsource vendor with which activity is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partners")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> Partners
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("partners");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Partners");
				if ((value == null))
				{
					this.SetAttributeValue("partners", value);
				}
				else
				{
					this.SetAttributeValue("partners", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Partners");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeactivityprocessinguntil")]
		public System.Nullable<System.DateTime> PostponeActivityProcessingUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeactivityprocessinguntil");
			}
		}
		
		/// <summary>
		/// Priority of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			}
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Choose the campaign from which the campaign activities were bulk-distributed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// List of required attendees for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> RequiredAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("RequiredAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("requiredattendees", value);
				}
				else
				{
					this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("RequiredAttendees");
			}
		}
		
		/// <summary>
		/// Users or facility/equipment that are required for the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resources")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> Resources
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("resources");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("Resources");
				if ((value == null))
				{
					this.SetAttributeValue("resources", value);
				}
				else
				{
					this.SetAttributeValue("resources", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Resources");
			}
		}
		
		/// <summary>
		/// Scheduled duration of the bulk operation, specified in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
		}
		
		/// <summary>
		/// Scheduled end date and time of the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
		}
		
		/// <summary>
		/// Scheduled start date and time of the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
		}
		
		/// <summary>
		/// Unique identifier of the mailbox associated with the sender of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		public Microsoft.Xrm.Sdk.EntityReference SenderMailboxId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
			}
		}
		
		/// <summary>
		/// Date and time when the activity was sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
		public System.Nullable<System.DateTime> SentOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
			}
		}
		
		/// <summary>
		/// Uniqueidentifier specifying the id of recurring series of an instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesid")]
		public System.Nullable<System.Guid> SeriesId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("seriesid");
			}
		}
		
		/// <summary>
		/// Unique identifier for an associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the case record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.OnPropertyChanging("SLAId");
				this.SetAttributeValue("slaid", value);
				this.OnPropertyChanged("SLAId");
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this case. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			set
			{
				this.OnPropertyChanging("SortDate");
				this.SetAttributeValue("sortdate", value);
				this.OnPropertyChanged("SortDate");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Shows whether the quick campaign is open, closed, or canceled.  Closed or canceled quick campaigns are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Xrm.Sdk.PluginRegistration.Entities.BulkOperationState> StateCode
		{
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Xrm.Sdk.PluginRegistration.Entities.BulkOperationState)(System.Enum.ToObject(typeof(Xrm.Sdk.PluginRegistration.Entities.BulkOperationState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
		}
		
		/// <summary>
		/// Select the quick campaign's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the quick campaign.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("subject", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// Number of records which succeeded in the bulk operation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("successcount")]
		public System.Nullable<int> SuccessCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("successcount");
			}
			set
			{
				this.OnPropertyChanging("SuccessCount");
				this.SetAttributeValue("successcount", value);
				this.OnPropertyChanged("SuccessCount");
			}
		}
		
		/// <summary>
		/// Select the type of records targeted in the quick campaign to identify the target audience.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetedrecordtypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue TargetedRecordTypeCode
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("targetedrecordtypecode");
			}
			set
			{
				this.OnPropertyChanging("TargetedRecordTypeCode");
				this.SetAttributeValue("targetedrecordtypecode", value);
				this.OnPropertyChanged("TargetedRecordTypeCode");
			}
		}
		
		/// <summary>
		/// Number of members to target.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetmemberscount")]
		public System.Nullable<int> TargetMembersCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("targetmemberscount");
			}
			set
			{
				this.OnPropertyChanging("TargetMembersCount");
				this.SetAttributeValue("targetmemberscount", value);
				this.OnPropertyChanged("TargetMembersCount");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Person who is the receiver of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> To
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				this.OnPropertyChanging("To");
				if ((value == null))
				{
					this.SetAttributeValue("to", value);
				}
				else
				{
					this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("To");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the activitypointer.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.OnPropertyChanging("TraversedPath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("TraversedPath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version number of the activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Information for bulk operation workflow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowinfo")]
		public string WorkflowInfo
		{
			get
			{
				return this.GetAttributeValue<string>("workflowinfo");
			}
			set
			{
				this.OnPropertyChanging("WorkflowInfo");
				this.SetAttributeValue("workflowinfo", value);
				this.OnPropertyChanged("WorkflowInfo");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_activity_parties")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityParty> bulkoperation_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>("bulkoperation_activity_parties", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_activity_parties");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActivityParty>("bulkoperation_activity_parties", null, value);
				this.OnPropertyChanged("bulkoperation_activity_parties");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ActivityPointer> BulkOperation_ActivityPointers
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActivityPointer>("BulkOperation_ActivityPointers", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_ActivityPointers");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ActivityPointer>("BulkOperation_ActivityPointers", null, value);
				this.OnPropertyChanged("BulkOperation_ActivityPointers");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_Annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_Annotations")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Annotation> bulkoperation_Annotations
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Annotation>("bulkoperation_Annotations", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_Annotations");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Annotation>("bulkoperation_Annotations", null, value);
				this.OnPropertyChanged("bulkoperation_Annotations");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_Appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_Appointment")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Appointment> BulkOperation_Appointment
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Appointment>("BulkOperation_Appointment", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_Appointment");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Appointment>("BulkOperation_Appointment", null, value);
				this.OnPropertyChanged("BulkOperation_Appointment");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation> BulkOperation_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation>("BulkOperation_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_AsyncOperations");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.AsyncOperation>("BulkOperation_AsyncOperations", null, value);
				this.OnPropertyChanged("BulkOperation_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.BulkDeleteFailure> BulkOperation_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.BulkDeleteFailure>("BulkOperation_BulkDeleteFailures", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_BulkDeleteFailures");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.BulkDeleteFailure>("BulkOperation_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("BulkOperation_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_CampaignResponse
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_CampaignResponse")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.CampaignResponse> BulkOperation_CampaignResponse
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.CampaignResponse>("BulkOperation_CampaignResponse", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_CampaignResponse");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.CampaignResponse>("BulkOperation_CampaignResponse", null, value);
				this.OnPropertyChanged("BulkOperation_CampaignResponse");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_Email
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_Email")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Email> BulkOperation_Email
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Email>("BulkOperation_Email", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_Email");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Email>("BulkOperation_Email", null, value);
				this.OnPropertyChanged("BulkOperation_Email");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_Faxes")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Fax> BulkOperation_Faxes
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Fax>("BulkOperation_Faxes", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_Faxes");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Fax>("BulkOperation_Faxes", null, value);
				this.OnPropertyChanged("BulkOperation_Faxes");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_IncidentResolutions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_IncidentResolutions")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.IncidentResolution> bulkoperation_IncidentResolutions
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.IncidentResolution>("bulkoperation_IncidentResolutions", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_IncidentResolutions");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.IncidentResolution>("bulkoperation_IncidentResolutions", null, value);
				this.OnPropertyChanged("bulkoperation_IncidentResolutions");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_Letter
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_Letter")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Letter> BulkOperation_Letter
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Letter>("BulkOperation_Letter", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_Letter");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Letter>("BulkOperation_Letter", null, value);
				this.OnPropertyChanged("BulkOperation_Letter");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_logs
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_logs")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.BulkOperationLog> BulkOperation_logs
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.BulkOperationLog>("BulkOperation_logs", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_logs");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.BulkOperationLog>("BulkOperation_logs", null, value);
				this.OnPropertyChanged("BulkOperation_logs");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_MailboxTrackingFolder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_MailboxTrackingFolder")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.MailboxTrackingFolder> BulkOperation_MailboxTrackingFolder
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.MailboxTrackingFolder>("BulkOperation_MailboxTrackingFolder", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_MailboxTrackingFolder");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.MailboxTrackingFolder>("BulkOperation_MailboxTrackingFolder", null, value);
				this.OnPropertyChanged("BulkOperation_MailboxTrackingFolder");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_OpportunityCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_OpportunityCloses")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.OpportunityClose> bulkoperation_OpportunityCloses
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.OpportunityClose>("bulkoperation_OpportunityCloses", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_OpportunityCloses");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.OpportunityClose>("bulkoperation_OpportunityCloses", null, value);
				this.OnPropertyChanged("bulkoperation_OpportunityCloses");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_OrderCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_OrderCloses")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.OrderClose> bulkoperation_OrderCloses
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.OrderClose>("bulkoperation_OrderCloses", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_OrderCloses");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.OrderClose>("bulkoperation_OrderCloses", null, value);
				this.OnPropertyChanged("bulkoperation_OrderCloses");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_Phonecall
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_Phonecall")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.PhoneCall> BulkOperation_Phonecall
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.PhoneCall>("BulkOperation_Phonecall", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_Phonecall");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.PhoneCall>("BulkOperation_Phonecall", null, value);
				this.OnPropertyChanged("BulkOperation_Phonecall");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.PrincipalObjectAttributeAccess> bulkoperation_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.PrincipalObjectAttributeAccess>("bulkoperation_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.PrincipalObjectAttributeAccess>("bulkoperation_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("bulkoperation_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_QueueItem")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.QueueItem> BulkOperation_QueueItem
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.QueueItem>("BulkOperation_QueueItem", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_QueueItem");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.QueueItem>("BulkOperation_QueueItem", null, value);
				this.OnPropertyChanged("BulkOperation_QueueItem");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_QuoteCloses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_QuoteCloses")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.QuoteClose> bulkoperation_QuoteCloses
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.QuoteClose>("bulkoperation_QuoteCloses", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_QuoteCloses");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.QuoteClose>("bulkoperation_QuoteCloses", null, value);
				this.OnPropertyChanged("bulkoperation_QuoteCloses");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_RecurringAppointmentMaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_RecurringAppointmentMaster")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.RecurringAppointmentMaster> BulkOperation_RecurringAppointmentMaster
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.RecurringAppointmentMaster>("BulkOperation_RecurringAppointmentMaster", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_RecurringAppointmentMaster");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.RecurringAppointmentMaster>("BulkOperation_RecurringAppointmentMaster", null, value);
				this.OnPropertyChanged("BulkOperation_RecurringAppointmentMaster");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_ServiceAppointments")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.ServiceAppointment> bulkoperation_ServiceAppointments
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ServiceAppointment>("bulkoperation_ServiceAppointments", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_ServiceAppointments");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.ServiceAppointment>("bulkoperation_ServiceAppointments", null, value);
				this.OnPropertyChanged("bulkoperation_ServiceAppointments");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_SocialActivity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_SocialActivity")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.SocialActivity> BulkOperation_SocialActivity
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SocialActivity>("BulkOperation_SocialActivity", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_SocialActivity");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SocialActivity>("BulkOperation_SocialActivity", null, value);
				this.OnPropertyChanged("BulkOperation_SocialActivity");
			}
		}
		
		/// <summary>
		/// 1:N BulkOperation_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.SyncError> BulkOperation_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SyncError>("BulkOperation_SyncErrors", null);
			}
			set
			{
				this.OnPropertyChanging("BulkOperation_SyncErrors");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.SyncError>("BulkOperation_SyncErrors", null, value);
				this.OnPropertyChanged("BulkOperation_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N bulkoperation_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_Tasks")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.Task> bulkoperation_Tasks
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Task>("bulkoperation_Tasks", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_Tasks");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.Task>("bulkoperation_Tasks", null, value);
				this.OnPropertyChanged("bulkoperation_Tasks");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_bulkoperation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_bulkoperation")]
		public System.Collections.Generic.IEnumerable<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData> userentityinstancedata_bulkoperation
		{
			get
			{
				return this.GetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData>("userentityinstancedata_bulkoperation", null);
			}
			set
			{
				this.OnPropertyChanging("userentityinstancedata_bulkoperation");
				this.SetRelatedEntities<Xrm.Sdk.PluginRegistration.Entities.UserEntityInstanceData>("userentityinstancedata_bulkoperation", null, value);
				this.OnPropertyChanged("userentityinstancedata_bulkoperation");
			}
		}
		
		/// <summary>
		/// N:1 account_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.Account account_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Account>("account_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("account_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Account>("account_BulkOperations", null, value);
				this.OnPropertyChanged("account_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_BulkOperation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_BulkOperation")]
		public Xrm.Sdk.PluginRegistration.Entities.ActivityPointer activity_pointer_BulkOperation
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.ActivityPointer>("activity_pointer_BulkOperation", null);
			}
			set
			{
				this.OnPropertyChanging("activity_pointer_BulkOperation");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.ActivityPointer>("activity_pointer_BulkOperation", null, value);
				this.OnPropertyChanged("activity_pointer_BulkOperation");
			}
		}
		
		/// <summary>
		/// N:1 bookableresourcebooking_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebooking_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.BookableResourceBooking bookableresourcebooking_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BookableResourceBooking>("bookableresourcebooking_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("bookableresourcebooking_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BookableResourceBooking>("bookableresourcebooking_BulkOperations", null, value);
				this.OnPropertyChanged("bookableresourcebooking_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 bookableresourcebookingheader_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebookingheader_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.BookableResourceBookingHeader bookableresourcebookingheader_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BookableResourceBookingHeader>("bookableresourcebookingheader_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("bookableresourcebookingheader_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BookableResourceBookingHeader>("bookableresourcebookingheader_BulkOperations", null, value);
				this.OnPropertyChanged("bookableresourcebookingheader_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 bulkoperation_mailbox_sendermailboxid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_mailbox_sendermailboxid")]
		public Xrm.Sdk.PluginRegistration.Entities.Mailbox bulkoperation_mailbox_sendermailboxid
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Mailbox>("bulkoperation_mailbox_sendermailboxid", null);
			}
		}
		
		/// <summary>
		/// N:1 bulkoperation_sla_slaid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_sla_slaid")]
		public Xrm.Sdk.PluginRegistration.Entities.SLA bulkoperation_sla_slaid
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SLA>("bulkoperation_sla_slaid", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_sla_slaid");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SLA>("bulkoperation_sla_slaid", null, value);
				this.OnPropertyChanged("bulkoperation_sla_slaid");
			}
		}
		
		/// <summary>
		/// N:1 bulkoperation_sla_slainvokedid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_sla_slainvokedid")]
		public Xrm.Sdk.PluginRegistration.Entities.SLA bulkoperation_sla_slainvokedid
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SLA>("bulkoperation_sla_slainvokedid", null);
			}
		}
		
		/// <summary>
		/// N:1 bulkoperation_transactioncurrency_transactioncurrencyid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_transactioncurrency_transactioncurrencyid")]
		public Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency bulkoperation_transactioncurrency_transactioncurrencyid
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("bulkoperation_transactioncurrency_transactioncurrencyid", null);
			}
			set
			{
				this.OnPropertyChanging("bulkoperation_transactioncurrency_transactioncurrencyid");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.TransactionCurrency>("bulkoperation_transactioncurrency_transactioncurrencyid", null, value);
				this.OnPropertyChanged("bulkoperation_transactioncurrency_transactioncurrencyid");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_BulkOperation_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_BulkOperation_activities")]
		public Xrm.Sdk.PluginRegistration.Entities.BusinessUnit business_unit_BulkOperation_activities
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.BusinessUnit>("business_unit_BulkOperation_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 CampaignActivity_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.CampaignActivity CampaignActivity_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.CampaignActivity>("CampaignActivity_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("CampaignActivity_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.CampaignActivity>("CampaignActivity_BulkOperations", null, value);
				this.OnPropertyChanged("CampaignActivity_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 contact_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.Contact contact_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Contact>("contact_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("contact_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Contact>("contact_BulkOperations", null, value);
				this.OnPropertyChanged("contact_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 interactionforemail_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.InteractionForEmail interactionforemail_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.InteractionForEmail>("interactionforemail_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("interactionforemail_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.InteractionForEmail>("interactionforemail_BulkOperations", null, value);
				this.OnPropertyChanged("interactionforemail_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 knowledgearticle_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("knowledgearticle_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.KnowledgeArticle knowledgearticle_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.KnowledgeArticle>("knowledgearticle_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("knowledgearticle_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.KnowledgeArticle>("knowledgearticle_BulkOperations", null, value);
				this.OnPropertyChanged("knowledgearticle_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 knowledgebaserecord_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("knowledgebaserecord_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.KnowledgeBaseRecord knowledgebaserecord_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.KnowledgeBaseRecord>("knowledgebaserecord_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("knowledgebaserecord_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.KnowledgeBaseRecord>("knowledgebaserecord_BulkOperations", null, value);
				this.OnPropertyChanged("knowledgebaserecord_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 lead_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lead_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.Lead lead_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Lead>("lead_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("lead_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Lead>("lead_BulkOperations", null, value);
				this.OnPropertyChanged("lead_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 List_BulkOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("List_BulkOperations")]
		public Xrm.Sdk.PluginRegistration.Entities.List List_BulkOperations
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.List>("List_BulkOperations", null);
			}
			set
			{
				this.OnPropertyChanging("List_BulkOperations");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.List>("List_BulkOperations", null, value);
				this.OnPropertyChanged("List_BulkOperations");
			}
		}
		
		/// <summary>
		/// N:1 lk_BulkOperation_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_BulkOperation_createdby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_BulkOperation_createdby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_BulkOperation_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_BulkOperation_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_BulkOperation_createdonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_BulkOperation_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_BulkOperation_createdonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_BulkOperation_createdonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_BulkOperation_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_BulkOperation_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_BulkOperation_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_BulkOperation_modifiedby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_BulkOperation_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_BulkOperation_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_BulkOperation_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_BulkOperation_modifiedonbehalfby")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser lk_BulkOperation_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_BulkOperation_modifiedonbehalfby", null);
			}
			set
			{
				this.OnPropertyChanging("lk_BulkOperation_modifiedonbehalfby");
				this.SetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("lk_BulkOperation_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_BulkOperation_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 team_BulkOperation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_BulkOperation")]
		public Xrm.Sdk.PluginRegistration.Entities.Team team_BulkOperation
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.Team>("team_BulkOperation", null);
			}
		}
		
		/// <summary>
		/// N:1 user_BulkOperation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_BulkOperation")]
		public Xrm.Sdk.PluginRegistration.Entities.SystemUser user_BulkOperation
		{
			get
			{
				return this.GetRelatedEntity<Xrm.Sdk.PluginRegistration.Entities.SystemUser>("user_BulkOperation", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public BulkOperation(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("community")]
		public virtual socialprofile_community? CommunityEnum
		{
			get
			{
				return ((socialprofile_community?)(EntityOptionSetEnum.GetEnum(this, "community")));
			}
			set
			{
				Community = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdrecordtypecode")]
		public virtual bulkoperation_createdrecordtypecode? CreatedRecordTypeCodeEnum
		{
			get
			{
				return ((bulkoperation_createdrecordtypecode?)(EntityOptionSetEnum.GetEnum(this, "createdrecordtypecode")));
			}
			set
			{
				CreatedRecordTypeCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public virtual activitypointer_deliveryprioritycode? DeliveryPriorityCodeEnum
		{
			get
			{
				return ((activitypointer_deliveryprioritycode?)(EntityOptionSetEnum.GetEnum(this, "deliveryprioritycode")));
			}
			set
			{
				DeliveryPriorityCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual none_bulkoperation_instancetypecode? InstanceTypeCodeEnum
		{
			get
			{
				return ((none_bulkoperation_instancetypecode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("operationtypecode")]
		public virtual bulkoperation_operationtypecode? OperationTypeCodeEnum
		{
			get
			{
				return ((bulkoperation_operationtypecode?)(EntityOptionSetEnum.GetEnum(this, "operationtypecode")));
			}
			set
			{
				OperationTypeCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual none_bulkoperation_prioritycode? PriorityCodeEnum
		{
			get
			{
				return ((none_bulkoperation_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				PriorityCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual bulkoperation_statuscode? StatusCodeEnum
		{
			get
			{
				return ((bulkoperation_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetedrecordtypecode")]
		public virtual bulkoperation_targetedrecordtypecode? TargetedRecordTypeCodeEnum
		{
			get
			{
				return ((bulkoperation_targetedrecordtypecode?)(EntityOptionSetEnum.GetEnum(this, "targetedrecordtypecode")));
			}
			set
			{
				TargetedRecordTypeCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}